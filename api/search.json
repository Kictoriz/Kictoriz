[{"id":"2d235e8538176bc190407e7938429ed4","title":"[Linux笔记]操作系统","content":"服务管理与任务定制1、Linux操作系统的启动1-1、修改GRUP的配置\nvim  &#x2F;etc&#x2F;default&#x2F;grub\nupdate-rtub\n\n1-2、Linux操作系统的开机过程\nLinux 操作系统的开机过程是，首先 BIOS初始化，然后进入系统引导程序(Boot Loader),接着加载系统内核，最后内核初始化并启动初始化进程。\n(1)BIOS初始化主要是对硬件进行检测，包括主机的硬件设备，如磁盘、内存条、显卡等。\n(2) Boot Loader的引导程序GRUB负责从磁盘中读入真正的Linux操作系统内核程序并执行随后的启动。\n(3)加载系统内核是引导程序将内核解压缩到主存储器中，并且利用内核的功能，开始测试与驱动各个周边设备，如网卡、CPU 等，此时 Linux内核将会重新检测一次硬件设备。\n(4)内核初始化并启动初始化进程。初始化进程作为Linux操作系统启动后的第一个正式服务，需要完成 Linux中相关的初始化工作，从而为用户提供合适的工作环境。\nGRUB是一个功能强大的 Boot Loader，如果计算机已经安装了不同的操作系统，进入GRUB程序后，则可以使用上下方向键选择要进入的操作系统，如图6-1-1所示。\n读者可以将初始化进程简单理解为从按下开机键到看见系统桌面的过程。\n\n1-3、初始化进程服务\nRHEL 8操作系统采用systemd初始化进程服务，在启动时会进行大量的初始化工作，如挂载文件系统、启动各类进程服务等，这些都可以看作是一个一个的单元（unit)。systemd用目标(target）代替了旧版 Linux操作系统system V init 中运行级别的概念。systemd与system vinit的区别如表所示。\n\n\n    system V init运行级别systemd的target名称systemd的target作用\n    0poweroff.target关机\n    1rescue.target单用户（救援）模式\n    2multi-user.target多用户的文本界面\n    3\n    4\n    5graphica1.target多用户的图形界面\n    6reboot.target重启\n\n\n2、Linux服务管理命令\nRHEL 8操作系统服务管理使用systemctl命令，包括启动服务、重启服务和关闭服务等，以及设置服务开机自动启动和开机不自动启动等。systemctl命令的格式如下。\n\nsystemctl[选项]服务名.service\n\n&#x2F;&#x2F; 其中，“.service”可以省略。\n\n\nsystemctl命令中常用选项的含义如表所示。\n\n\n    选项含义\n    start启动服务\n    restart重启服务\n    stop停止服务\n    reload重新加载配置文件\n    status查看服务状态\n    enable设置开机自动启动\n    disable设置开机不自动启动\n    is-enabled查看服务是否为开机自动启动\n    list-unit-files查看服务启动列表\n\n\n\n重新加载配置文件只能在服务已经启动的状态下使用。\nRHEL 5&#x2F;6使用service和chkconfig等命令来管理服务，而 RHEL 8则采用的是systemctl命令,且命令格式也是不同的,请读者注意区分,不要混绢。\n\n#启动Squid服务\nsystemctl start squid.service\n#停止Squid服务\nsystemctl stop squid.service\n#将Squid服务设置为开机自动启动\nsystemctl enable squid.service\n\n3、一次性计划任务管理命令3-1、设置- -次性计划任务 -at命令\n一次性计划任务是指在指定的日期或时间点自动执行预先设置的一些操作，一 般用于临时的工作需求。设置一次性计划任务使用at命令，其格式如下。\n\nat [选项] [n] (HH:MM] [YYY-MM-DD] \n# 其中，“n”表示任务编号，“HH:MM&quot;表示时间，“YYY-MM-DD”表示日期。\n选项：\n\t-l：显示待执行的任务列表\n\t-d：删除指定任务编号的任务\n\n\n使用at命令设置一次性计划任务时，默认采用的是交互方式。在交互环境下对一次性计划任务设置完成后，按“Ctrl+D”组合键提交任务即可。\n\n","slug":"LinuxCaozuoxitong","date":"2023-04-25T07:00:00.000Z","categories_index":"","tags_index":"学习笔记,学习,笔记,Linux","author_index":"雨中冒险"},{"id":"3dc40b846d0b9e36e38487ef19f2f98c","title":"[Linux笔记]软件包操作相关命令","content":"软件包与进程管理1、RPM1-1、RPM简介\n红帽软件包管理工具是Red Hat公司提出的软件包管理标准。\nRPM会建立统一的数据库文件，详细记录软件信息并能够自动分析软件包之间的依赖关系。\n软件包是一个相对独立的功能单元，但许多软件包通常还需要一定的底层支持，如函数库或网络协议等。通常情况下，一个函数库或网络协议会同时支持多个软件包，当一个软件包需要某个特定的函数库或网络协议时，那么被该函数库或网络协议所支持的软件包就称为这个软件包的依赖。\n\n1-2、RPM命令1-2-1、查询已经安装好的包\n使用rpm命令查询RPM软件包信息时，无须指定版本号，只添加软件名即可。“rpm -qf 文件或目录”命令在解决软件包依赖关系的时候非常有用，因为知道所依赖的模块属于哪个软件包，才能安装该软件包。\n\nrpm -q[a] [子选项] [软件包名]\n\n1-2-2、查询文件或目录属于哪个软件包rpm -qf 文件或目录名\n\n1-2-3、查询系统中没有安装的软件包信息rpm -qp [子选项] 绝对路径&#x2F;软件包名\n\n\n上面所有子选项的含义：\n\n-i：查询指定软件包的详细信息\n-l：查询指定软件包所安装的目录、文件列表\n-c：仅查询指定软件包安装的配置文件\n-d：仅查询指定软件包安装的文档文件\n-R：列出与该软件包有关的依赖软件包所含的文件\n\n1-2-4、使用rpm安装命令安装或升级软件包\n使用rpm命令安装软件包时，须确保软件安装包已经存在，且须在存放安装包的目录下执行安装命令。RPM软件包正式安装前会检查软件包的依赖关系，如果依赖的软件包不存在，则安装无法正常进行。\n\nrpm [选项] 软件包文件\n选项：\n\t-i：安装一个新的RPM软件包\n\t-v：显示详细的安装过程\n\t-h：使用“#”显示安装进度\n\t-U：升级RPM软件包，若软件包未安装，则进行安装\n\t-F：升级RPM软件包，若软件包未安装，则放弃安装\n\n\n在使用yum更新软件的情况下，在更新之前需要先备份，以免出现软件包不兼容的情况\n\n1-2-5、使用rpm命令安装没有依赖关系的RPM软件包rpm -ivh(选项) vsftpd(软件名)-3.0.3(版本号)-33.el8(修订号).x86_64(硬件平台).rpm(扩展名)\n\n1-2-6、使用rpm命令安装具有依赖关系的RPM软件包rpm -ivh(选项) libstdc(软件名)++-8.4.1(版本号)-1.e18(修订号).1686(硬件平台).rpm(扩展名)\n\n1-2-7、卸载软件包\n如果卸载的软件包与其他已经安装的软件包之间存在依赖关系，则系统会报错并终止卸载操作。执行卸载命令后，如果屏幕没有任何提示，则表示卸载成功。\n\nrpm -e[vh] [软件包名]\n\n2、YUM2-1、YUM简介\nYUM是一个功能完善、易于使用的软件维护工具，它可以根据用户的要求分析出所需软件包及其相关的依赖关系，然后自动从服务器(YUM软件仓库)下载软件包并安装到Linux操作系统。使用YUM能够进一步降低软件包的安装难度和复杂度。\n可以将YUM想象成一个庞大的软件仓库，里面保存着几乎所有的常用工具，而且只需知道所需软件名，系统就会自动为用户完成后续工作。\n\n2-2、常用的YUM命令yum [选项] [操作] [软件包名]\n选项：\n\t-h：显示帮助信息\n\t-y：安装过程中的提示选项均选择“yes”\n\t-q：不显示安装过程\n操作：\n\tlist：列出YUM所管理的所有软件包\n\tinfo：列出软件包详细信息\n\tsearch：查找软件包或匹配特定字符的软件包\n\tinstall：安装软件包\n\tReinstall：重新安装软件包\n\tupdate：更新软件包\n\tcheck-update：检查可更新的软件包\n\tremove：卸载软件包\n\tclean all：清除所有YUM缓存\n\n3、源码包安装方式\n自己看书，或者百度，我不想写了。\n\n进程进程和程序进程是指具有一定独立功能的应用程序在一个数据集合上的一次动态执行过程，它是操作系统动态执行的基本单位。Linux 操作系统通过进程完成每个任务，且每个进程都由一个进程号(process identification，PID）来标识。PID总是唯一的，但可以重复使用。当一个进程终止后，其PID 可以再次使用。进程和程序是不同的,主要体现在以下3个方面。\n\n(1)程序是一个静态的指令集合，可长期保存，而进程是一个程序的动态执行过程，它具有生命周期，是动态产生和消亡的。例如，C语言代码通过编译器编译后，最终会成为一个可执行程序，当这个可执行程序运行起来后（没有结束之前)，它就成为一个进程。\n(2)进程是系统资源分配和调度的基本单位。\n(3)程序和进程不存在一一对应的关系。一个程序在运行中可以产生多个进程，一个进程在生命周期内可以顺序执行若干个程序。\n\n\n\n\n\n\n\n\n\n\n在 Linux操作系统中安装并配置服务器软件后，通常是由运行在后台的守护进程(daemon）来执行,这个守护进程又称为服务。\n进程的状态Linux操作系统中的进程是有状态的，且状态之间是可以相互转换的。Linux将进程运行的整个生命周期简单划分为3种基本状态，分别是就绪状态、运行状态和等待状态。\n\n(1)就绪状态，进程已经满足运行所需的全部条件，正在等待分配CPU.\n(2)运行状态，进程占用CPU 正在运行。\n(3)等待状态，进程因不具备某些执行条件而暂时无法继续运行。\n\n除了以上3种基本状态外，Linux操作系统还描述了进程的以下状态\n\n(1)挂起状态:正在运行的进程，因为某种原因失去CPU 而暂停运行。\n(2)终止状态:进程已结束。\n(3)休眠状态:进程主动暂时停止运行。\n(4)不可中断:进程不可被收到的信号中断。\n(5)僵死状态:由于某种原因进程停止运行，但进程的控制结构依然存在。\n\n进程的优先级Linux操作系统中所有进程根据其所处状态，按照时间顺序排列成不同的队列，系统按照相应的策略调度就绪队列中的进程。队列中的进程是有优先级的，取值范围为“-20～19”,优先级的取值越小，其优先级越高，越具有优先启动的权利。启动进程的root用户或普通用户可以修改进程的优先级，root用户既可以调高优先级也可以调低优先级，而普通用户只能调低优先级。配置进程优先级可以改善Linux操作系统的性能。\n进程的启动方式进程的启动方式有两种，一种是手工启动，另一种是自动启动。其中，手工启动是指由用户输入命令后按“Enter”键直接启动进程，它又可分为前台启动和后台启动。前台启动是由用户输入命令后按“Enter”键直接执行程序;后台启动是在命令行的末尾加上“&amp;”符号，然后再按“Enter”键。自动启动是系统按照用户要求的时间或方式定时执行特定任务，详细内容将在项目六中介绍。\n进程管理命令常用的进程管理命令包括查看进程信息(ps、top和 pstree）、调整进程优先级(nice)、终止进程运行（kill和killall)、将当前进程调入后台并停止运行（“Ctrl+Z组合键)查看处于后台的进程（jobs）和将处于后台的进程恢复到前台运行（fg）等。\n1.查看进程信息—— ps命令、top命令和 pstree命令ps\n（1）静态查看进程信息使用ps命令，其格式如下。ps [选项]\n\nps aux\n上述命令执行结果中各字段的含义\n\n\n序号\n字段\n含义\n\n1user进程所有者\n2pid进程id号\n3%cpu进程的cpu占用百分比\n4%mem进程内存占用百分比\n5VSZ进程虚拟内存量(单位KB)\n6RSS进程固定内存量(单位KB)\n7TTY进程所在终端\n8STAT进程目前状态(R:运行状态;S:休眠状态;T:终止状态;D:不可中断状态;Z:僵死状态)\n9START启动进程时间\n10Time进程实际占用cpu时间\n11COMMAND进程对应的命令名\n\n\n\ntoptop\ntop命令执行结果的前5行（标注框内容）为系统整体的统计信息，各行所代表的含义如下。\n\n第1行包括系统时间、运行时间、登录终端数、系统平均负载（后面的3个值分别为1分钟、5分钟和15分钟内的平均值，数值越小意味着负载越低)。\n第2行包括进程总数、运行中的进程数、休眠中的进程数、停止的进程数和僵死的进程数。\n第3行显示的是CPU使用情况，包括用户占用百分比、系统内核占用百分比、修改过优先级的进程占用百分比等。\n第4行显示的是物理内存的使用情况，包括物理内存总量、内存空闲量、内存使用量和缓冲区占用的内存量。\n第5行显示的是交换分区的使用情况，包括交换分区总量、交换分区空闲量、交换分区使用量和用于高速缓存的大小。top命令执行结果第6行各字段的含义依次为，进程D号、进程的所有者、进程的优先级、进程的优先级数值、进程占用的虚拟内存值、进程占用的物理内存值、进程占用的共享内存值、进程的状态、进程的CPU占用百分比、进程的内存占用百分比、进程实际占用CPU 的时间和进程对应的命令名。\n\n使用top命令后，其操作方式有以下6个。1按“P”键根据 CPU 占用情况进行排序。\n\n按“P”键根据 CPU 占用情况进行排序\n按“M”键根据内存占用情况进行排序。\n按“N”键根据进程的PID大小进行排序。\n按“h”键获得top命令的在线帮助信息。\n按“q”键正常退出 top命令。\n按“空格”键强制更新进程状态信息。\n\n\n\n\n\n\n\n\n\n\n在服务器访问高峰期，如果使用一些对服务器访问压力较大的命令，如复制大量的数据或压缩&#x2F;解压缩大文件等,有可能会造成服务器响应缓慢甚至死机。每台服务器具体提供的服务不同，其访问高峰期也会有所不同。故在实际生产环境中，高负载命令一般建议在凌晨执行。\npstree以树型结构显示各进程间的关系使用pstree命令，其格式如\npstree[选项]\n常用选项的含义如表\n\n\n\n选项\n含义\n\n\n\n-a\n显示进程对应的命令名\n\n\n-u\n显示进程对应的用户名\n\n\n-p\n显示进程的pid\n\n\n调成进程优先级调整进程优先级使用nice命令,其格式如下:\nnice -n 优先级数值 进程名\n\n例: nice -n 10 nasj\n执行ps -l命令可查看进程信息\n终止进程运行 kill命令和kill all命令kill [选项] [PID]\n选项内常用命令为-9和-15(默认).其中选项-9表示强制终止进程,选项-15表示正常终止进程\nkillall [选项] [进程名]\n\n例: killall phh-fpm\nkillall命令常用选项和含义和kill命令基本相同\n\n\n\n\n\n\n\n\n\n在实际生产环境中，不建议使用“kill-9”命令,尤其是在Web、执行定时任务或包含长事务等应用中，因为执行该命令会立即强制终止进程，很可能会造成数据丢失、无法启动等问题。所以，读者应认真研究各个命令的含义，在执行前估量其可能带来的后果,并养成严谨认真的工作态度。\n","slug":"LinuxRuanjian","date":"2023-04-23T07:11:46.000Z","categories_index":"","tags_index":"学习笔记,学习,笔记,Linux,软件包","author_index":"雨中冒险"},{"id":"b34163682a4d59686c5ded94e1395695","title":"[JS笔记]JS中的基础","content":"基础javaScript 由ECMA dom bom 组成\n内嵌式:\n&lt;script&gt;\n\n&lt;&#x2F;script&gt;\n\n\n行内式js:\n&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;点击我&quot; onclick&#x3D;&quot;alert(&#39;hello world!&#39;)&quot;&gt;\n\n\n外部js文件内:    1 不需要写script标签                         2 html文件中引入js下面不能写js代码                         3 严格区分大小写                         4 js代码对空格、换行、缩进不敏感、一条语句可以分多行书写                         5 js没写分号也不会报错\n引用代码(不准确)：\t\n&lt;script src&#x3D;&quot;newjs.js&quot;&gt;&lt;&#x2F;script&gt; &#x2F;&#x2F;引入js\n\n   alert(msg)  弹出警示框\n   console.log(msg) 浏览器控制台打印出信息 (使用函数时不需要连接符+)\n   prompt(msg) 让用户输入信息,它的返回值就是用户输入的信息,默认获取得到是字符串类型 无法加减\n\n1 变量白话文解释:变量就是一个装东西的盒子通俗:变量就是存放数据的容器，我们通过变量名获取数据，甚至数据可以修改。不需要提前声明变量类型赋值的同时被确定声明变量Name 有特殊含义 最好不要作为变量名var age; &#x2F;&#x2F;声明是一个age变量\nvar 是js的关键字 variable的简写意思变量连接符 +例如  console.log(“我今年”+age”岁了”)\n同时声明多个变量   var myname&#x3D;18 , age&#x3D;10 , email&#x3D;&#53;&#x31;&#53;&#57;&#56;&#48;&#50;&#54;&#x39;&#x40;&#x71;&#x71;&#46;&#x63;&#111;&#x6d;;\n不声明只赋值会变成全局变量\n数据类型简介：\n\n简单类型和复杂类型\n\n简单类型:\n简单类型又叫做基本数据类型或者值类型\n值类型： 简单数据类型&#x2F;基本数据类型，在存储变量中存储的是值本身，因此叫做值类型\n\n\n\n\n\nString、number、Boolean、undefined、null\n\n复杂类型:\n复杂类型又叫做引用类型\n引用类型： 复杂数据类型，在存储变量中存储的仅仅是地址（引用），因此叫做引用数据类型，通过new关键字创建的对象（系统对象、自定义对象），如Object、Array、Data等\n\n\n\n字符串+number&#x3D;字符串number+number&#x3D;数字相加\ntypeof 变量名（检测数据类型）\n转换数字型型parseInt()parseFloat()\n流程控制: 顺序结构 分支结构   循环结构\n数据可以通过修改Length改变长度 例:                               arr.length&#x3D;7                              额外增加的值为undefind\n常用的一些方法typeof(变量名):查看变量类型parseInt(变量名):将变量转换为整数parseFloat(变量名):将变量转换为浮点型\n对象对象是一组无需的相关属性和方法集合对象由属性和方法组成属性:事物的特征 在对象中用属性表示    调用 例:arr.属性名 另一种 对象[‘属性名’]方法:事物的行为 在对象中用方法来表示    调用 例:arr.方法名()\n创建: new object 和构造函数及字面量\n对象字面量:{          }                ↑ 使用键值对,可以在值放方法\n创建对象 var andy&#x3D;new Object()            andy.age&#x3D;18            andy.name&#x3D;’可可’            andy.sex&#x3D;’男’\n构造函数:初始化对象,赋初值,首字母大写\n创建   function Person(name,age,sex){       this.name&#x3D;name       this.age&#x3D;age       this.sex&#x3D;sex       this.sayhi&#x3D;function(){        ~~~~~~~       }}\nvar bigbai&#x3D;new Person(‘小白’,’18’,’男’)\n对象分自定义对象,内置对象,浏览器对象对象是类的实例化\nnew:   1.内存中创建新的空对象   2.让this来指这个空对象   3.执行构造函数里的代码\n   4.返回这个新对象(构造函数不需要return)\n遍历对象属性:\nfor(变量 in 对象名){\n}\nMath对象:    \n\nMath.round 从0到1的含无限位小数的随机数 \nMath.PI 圆周率\nMath.abs 绝对值\nMath.ceil 向上取正\nMath.floor 向下取正\n\n面向对象的特征:封装性:将数据与功能组合到一起              继承性:实现代码复用的一个手段              多态性:对不同的对象,一种操作,不同的执行结果.\n面向对象和面向过程的区别:面向对象是相对于面向过程的                       面向过程对象包含了面向过程                       是面向过程的封装对象是类的实例\n数组arr.push 末尾添加 返回的是新数组的长度,并且 修改arr.pop 删除末尾的数 返回的是删除的值arr.unshift 在数组开头添加任意元素 返回的是数组长度arr.shift 删除左边第一个元素,返回的是删除的值\narr.isArray(arr) 判断是否为数组arr instanceof Object   判断arr 是否是 Object后面的类,或者属于其子类\n伪数组 arguments: 1.有length属性                 2.按索引的方式储存数据                 3.不具有push,pop等方法                 4.可遍历  \n匿名函数 (function(){           alert()}  &#x2F;&#x2F;若需要立即执行则大括号后面跟一个()即可\n函数函数就是封装了一段可被重复封装执行的代码块\n函数在使用时分两步:声明函数和调用函数\n声明:function 函数名(){函数体   } 调用的时候是 函数名()     不要忘记加括号\n return语句之后的代码不被执行 return只能返回一个值,如果跟了多个值 返回最后一个值\nMath.random()取特定区间的随机数值: function getRandom(min,max)&#123;\n       return Math.floor(Math.random()*(max-min+1)+min);\n&#125;\n\nMath.floor() 代表向下取整\nMath.cell() 代表向上取整\nMath.random() 代表获取0到1中间的随机数 \n\n先算Max-min 得到他们的区间差,假设Max为18,min为11\n式子为 Math.floor(Math.random()*(18-11+1)+11);\n通过计算现在为(Math.random()*(7+1)+11)\n他们的区间为7,也就是现在是获取0到6.9999999\n但Math.floor会向下取整 所以要+1\n最后随机数从0到7都有可能\n再加上最小数11\n则成功获取到min到max区间的值\n\n\n\nDate()Date:他是个构造函数 ,需先实例化利用参数创造:new Date(2012-12-21)getFullyear()–获取年份getMonth()–获取月,取值为0-11, 正常月分来算需要值+1getDate()–获取日getDay()–获取星期几,0为星期天,1为星期一getHours()–获取时getMinutes()–获取分getSeconds()–获取秒get Milliseconds()– 获取毫秒    1000毫秒&#x3D;1000毫秒Date.now()–获取现在的时间var now &#x3D;+new Date()–1970到现在的毫秒获取\n待补完’","slug":"JavaScriptChangyongHanshu","date":"2023-04-15T08:15:38.000Z","categories_index":"","tags_index":"学习笔记,学习,笔记,JavaScript,函数,js,JS","author_index":"雨中冒险"},{"id":"04067c54252c28898a0ede65f4d0c63f","title":"[Vue笔记]Vue基础","content":"基础基础中的基础\nv-html:指令会将实例中的数据当成HTML标签解析后输出，它等同于JavaScript的innerHtml属性。\n\n\nv-text:主要用来更新textContent，将实例中的数据当成纯文本输出，可以等同于JavaScript的text属性。\n\n\nv-once:只渲染元素和组件一次，随后的渲染，使用了此指令的元素&#x2F;组件及其所有的子节点，都会当作静态内容并跳过，这可以用于优化更新性能。v-once指令也不需要表达式。\n\n\nv-if:用来判断+控制显示（渲染与否，如果false则删除该节点,true为渲染该节点）\n\nv-show:控制显示（隐藏与否，元素节点一直存在，只是没有显示,在需要经常渲染或消失的情况用v-show更好,否则使用v-if更好）\n\n\n\n\n\n\n\n\n\n\n\n简单来说就是:v-if 指令用于条件性地渲染一块内容。这块内容只会在指令的表达式返回 true 值的时候被渲染。v-show不管条件是否成立，都会渲染html,只是表达式为false时会用display&#x3D;none来隐藏掉该元素\n\n\n\nv-for:指令通常基于一个数组或者对象 来渲染一个列表。v-for 指令需要使用 (item,index) in items 形式的特殊语法，其中 items 是源数据数组，而 item 则是被迭代的数组元素的别名,我们可以访问所有父作用域的属性。v-for 还支持一个可选的第二个参数，即当前项的索引。也可以用 of 替代 in 作为分隔符，因为它更接近 JavaScript 迭代器的语法..\n\n\n\nv-on\nv-on:指令是来绑定事件监听器的，类似原生JavaScript的onclick的用法。这样我们就可以做一些交互了。v-on:click可以简写成@click,同时v-on可以绑定很多javascript事件。\n\n\n\n\n\n\n\n提示\nVue支持以下修饰符\n阻止单击事件冒泡\n&lt;a v-on:click.stop&#x3D;&quot;doThis&quot;&gt;&lt;&#x2F;a&gt;\n提交事件不再重载页面 \n&lt;form v-on:submit.prevent&#x3D;&quot;onSubmit&quot;&gt;&lt;&#x2F;form&gt;\n修饰符可以串联 \n&lt;a v-on:click.stop.prevent&#x3D;&quot;doThat&quot;&gt;&lt;&#x2F;a&gt;\n只有修饰符 \n&lt;form v-on:submit.prevent&gt;&lt;&#x2F;form&gt;\n\n\n\nv-model预期：随表单控件类型不同而不同。限制：\n&lt;input&gt;\n&lt;select&gt;\n&lt;textarea&gt;\ncomponents\n\n修饰符：.lazy - 取代 input 监听 change 事件.number - 输入字符串转为有效的数字.trim - 输入首尾空格过滤\nv-model 会忽略所有表单元素的 value、checked、selected 特性的初始值而总是将 Vue 实例的数据作为数据来源。你应该通过 JavaScript 在组件的 data 选项中声明初始值。\nv-model 在内部为不同的输入元素使用不同的属性并抛出不同的事件：text 和 textarea 元素使用 value 属性和 input 事件；checkbox 和 radio 使用 checked 属性和 change 事件；select 字段将 value 作为 prop 并将 change 作为事件。\nv-model 在内部为不同的输入元素使用不同的属性并抛出不同的事件：text 和 textarea 元素使用 value 属性和 input 事件；checkbox 和 radio 使用 checked 属性和 change 事件；select 字段将 value 作为 prop 并将 change 作为事件。对于需要使用输入法 (如中文、日文、韩文等) 的语言，你会发现 v-model 不会在输入法组合文字过程中得到更新。如果你也想处理这个过程，请使用 input 事件。\n计算属性(computed)及过滤器(filters)和监听(watch)computed 计算属性\ncomputed:&#123;\n   计算属性名()&#123;\n         执行代码块\n    return \n\n&#125;\n&#125;   (计算属性，不能和data的变量名相同)\n\n\nwatch 监听语法规则: \nwatch:&#123;\n\t\tzong() &#123;\n\t\t\tthis.msg&#x3D;this.zon&gt;60?&#39;考试合格&#39;:&#39;考试不合格&#39;\n\t\t&#125;\n                       &#x2F;&#x2F;所有监听的定义在这里\n\nfilters 过滤器\n filters &#123;\n    过滤器名称(参数-对谁过滤就是谁 )&#123;\n       代码块\nreturn 值\nabc(value) &#123;\n\t\t\t\t\n\t\t\t\tthis.value&#x3D;&#39;$&#39;+value.toFixed(2)\n\t\t\t\t\n\t    \t\treturn this.value;\n\t    \t&#125;\n\t    &#125;\n&#125;\n&#125;\n使用过滤器:   &#123;&#123;num | 过滤器名称&#125;&#125;\n\n\n\n\n数组方法Vue 包含一组观察数组的变异方法，所以它们也将会触发视图更新。这些方法如下：\n\npush() 添加元素\npop() 删除最后一个元素\nshift() 删除第一个元素\nunshift() 添加一个元素到数组最前面\nsplice() 方法用于插入、删除或替换数组的元素\nsort() 排序（升序）\nreverse() 排序（降序）\nslice(begin, end)\nbegin 可选  从该索引开始提取原数组元素，如果该参数为负数，则表示从原数组中的倒数第几个元素开始提取。此参数缺省为0，如果 begin 超出原数组的索引范围，则会返回空数组。\nend 可选 在该索引处结束提取原数组元素，slice 会提取原数组中索引从 begin 到 end 的所有元素（包含 begin，但不包含 end）。如：slice(0,2) 会提取原数组中从第1个元素开始到第3元素之间的（不包含第3个元素）所有元素 （即索引为 0，1的元素）。如果该参数为负数， 则它表示在原数组中的倒数第几个元素结束抽取。 slice(-2,-1) 表示抽取了原数组中的倒数第二个元素到最后一个元素（不包含最后一个元素，也就是只有倒数第二个元素）.如果 end 被省略或者大于数组的长度，则 slice 会一直提取到原数组末尾。\n返回值 一个含有被提取元素的新数组。\n\n\n\nVue实例属性\nvm.$props:可以接受上级组件向下传输的数据,可以打印接受所有父组件和外部组件传来的数据(键值对)\n\nvm.$options Vue实力画室,除了指定的选项,还可以传入自定义选项,其中自定义选项没有响应式例(el,data)\n\nvm.$el 属性可以访问当前实例或组件使用的根dom元素\n\nvm.$children 可以用来获取当前实例的子组件,不保证顺序,同时也不是响应式\n\nvm.$root 用来获取当前组件根实例\n\nvm.$slots:可以访问插口相关属性\n\nvm.$attrs:获取组件的属性,但获取的属性不包含class,style,props属性\n\nvm.$refs: 通过给标签行内添加 ref&#x3D;”id” ,在实例中可以通过this.$refs.id 获取到该元素\n\n\nVue组件组件内容分发单个插槽 在调用组件时中间写上内容分发        在子组件中使用标签接受内容        如果父组件没有插入内容  在  作为默认内容分发 具名插槽  给slot 标签加name  例:         给分发内容标签里添加 slot&#x3D;”title”  例:作用域插槽  让子组件的数据在父级的插槽可以被访问           将子组件的数据作为slot属性并对其进行绑定           在父级作用域中,可以V-solt设置一个包含所有插槽prop的对象名称           在父级,具有特殊属性scope的template元素被称作作用域插槽模板           scope的值对应一个临时变量,这个变量用于接收从子组件传递到props对象作用域插槽例: \n&lt;div id&#x3D;&quot;app&quot;&gt;\n        &lt;parent&gt;\n        &lt;template slot-scope&#x3D;&quot;myS&quot;&gt;\n            &lt;div&gt;\n                &lt;p&gt;第一个:&#123;&#123;myS.text&#125;&#125;&lt;&#x2F;p&gt;\n                &lt;p&gt;第二个:&#123;&#123;myS.text2&#125;&#125;&lt;&#x2F;p&gt;\n            &lt;&#x2F;div&gt;\n        &lt;&#x2F;template&gt;\n    &lt;&#x2F;parent&gt;\n    &lt;&#x2F;div&gt;\n    &lt;template id&#x3D;&quot;tem&quot;&gt;\n        &lt;div&gt;\n            &lt;slot text&#x3D;&quot;hello&quot; :text2&#x3D;&quot;msg&quot;&gt;&lt;&#x2F;slot&gt;\n        &lt;&#x2F;div&gt;\n    &lt;&#x2F;template&gt;\n    &lt;script&gt;\n        Vue.component(&#39;parent&#39;,&#123;\n            template:&#39;#tem&#39;,\n            data()&#123;\n                return&#123;\n                    msg:&#39;这是组件属性&#39;\n                &#125;\n            &#125;\n\n\n\nmixins:是一种分发vue组件中可服用的方式,合并时:如果数据冲突,则遵循就近原则      如果是狗子函数冲突,先执行混入里的函数,再执行组件的函数\nrender():渲染函数,使用Vue.render实现对虚拟dom的操作,可以更好发挥编程能力例:\nrender(createElement){    return createElement(要chauffeu创造的标签名,数据对象,子级节点)}\nVue.useVue.use():先定义插件,再安装定义: 定义对象或函数,如果是对象,需要用install()安装,如果是函数方法,不需要install()安装: Vue.use(插件名)例:\n\nlet plugin&#x3D;&#123;&#125;\nplugin.install&#x3D;function(Vue.options)&#123;\n    vue.directive(&#39;colors&#39;,&#123;\n        bind(el,binding)&#123;\n            el.style.color&#x3D;&quot;red&quot;\n        &#125;\n    &#125;)\n&#125;\nVue.use(plugin)\n\n如果是函数: \n\nfunction abc&#123;\n    Vue.directive(&#39;同上~~&#39;&#125;)\nVue.use(abc)\n\n\n\nVue.extend及Vue.mixin和Vue.extendVue.extend:基于Vue创造子类\nVue.set 响应式可以向响应式对象添加一个也具有响应式的属性使用:Vue.set(响应式对项目,要添加的响应式属性,要添加响应式属性的值)例:Vue.set (vm.obj,’age’,20)\nVue.mixin用于全局注册的一个混入,它影响之后创建的每一个Vue实力,该接口主要是提供给插件作者使用\n","slug":"VueJichu","date":"2023-04-15T06:19:44.000Z","categories_index":"","tags_index":"学习笔记,学习,笔记,Vue,基础","author_index":"雨中冒险"},{"id":"f1528f06a9d4931b446ce220ed34e353","title":"[Linux笔记]磁盘管理","content":"1、磁盘分区概述\n磁盘是计算机主要的存储介质，可以存储大量的数据。\n\n磁盘主要有以下4部分组成：\n\n1、磁头（head）：磁头是硬盘中最昂贵的部件，也是硬盘技术中最重要和最关键的一环\n2、磁道（track）：当磁盘旋转时，磁头若保持在一个位置，则会在磁盘表面划出一个圆形轨迹称为磁道。\n3、扇区（sector）：磁盘上的每个磁道被等分为若干个弧段，这些弧段称为磁盘的扇区。每个扇区可以存放512B的信息，磁盘驱动器在向磁盘读取和写入数据时，要以扇区为单位。\n4、柱面（cylinder）：硬盘通常由重叠的一组盘片组成，每个盘面都被划分为数目相等的磁道，并从外缘的“0”开始编号，具有相同编号的磁道形成一个圆柱，称为柱面。\n\n\n分区就是将磁盘上的存储空间在逻辑上分为若干个相互独立的区域，每一个区域就称为一个分区。分区最前面有一个引导扇区，称为主引导记录（MBR）。MBR位于硬盘的“0”磁道、“0”柱面、“1”扇区中，它共占用了一个扇区，也就是512B。\n\nMBR区域可以分为三部分。第一部分是pre-boot区（预启动区），占446B。第二部分是磁盘分区表，占64B。第三部分是结束符，占2B。磁盘分区信息记录在磁盘分区表中。由于磁盘分区表中每记录一个分区信息就需要16B，因此，一块磁盘最多只能建立4个基本分区，称为主分区（primary）。\n\n在实际应用过程中,有时仅仅4个分区是无法满足用户需求的,此时就需要用到扩展分区(extended).扩展分区只能有一个,且必须建立在主分区上,即扩展分区必须属于4个主分区中国的一个.扩展分区是不能直接使用的,还需要将其划分为若干个更小的逻辑分区,逻辑分区没有数量限制,其分区信息记录在扩展分区表中.主分区,扩展分区和逻辑分区的关系入图所示\n\n\n\n  \n主分区1\n主分区2\n主分区3\n逻辑分区1\n逻辑分区2\n......\n\n\n\n2、分区管理命令  fdiskfdisk [-l] [磁盘设备名]\n\n-l：表示查看磁盘的分区信息。如果不加，则表示进入交互模式中管理磁盘分区。\nfdisk命令中常用的指令：\n\tm：查看操作指令的帮助信息。\n\tp：查看分区信息。\n\tn：新建分区。\n\td：删除分区。\n\tt：变更分区类型。\n\tw：保存分区设置并退出。\n\tq：放弃分区设置并退出。   、\n提示：\n\tfdisk命令不加“-l”选项时，必须加磁盘设备名。在非交互模式中执行“fdisk -l &#x2F;dev&#x2F;sda”命令查看磁盘设备“&#x2F;dev&#x2F;sda”的分区信息，与执行“fdisk &#x2F;dev&#x2F;sda”命令进入交互模式中再按“p”键的效果相同。\n\t运行fdisk -l得到的结果含义为：\n\t\t设备：分区设备名。\n\t\t启动：是否是引导分区，有“*”标识的是引导分区。\n\t\t起点：该分区在硬盘中的起始位置。\n\t\t末尾：该分区在硬盘中的结束位置。\n\t\t扇区：扇区个数。\n\t\t大小：分区的大小。\n\t\tId：分区类型的ID标记号，对于ext3分区为83，LVM分区为8e。\n\t\t类型：分区类型。\n\n3、文件系统\n文件系统（file system）是Linux操作系统用来存储和管理文件的方法。用户经常所说的文件系统有以下3种含义：\n\n1、指一种特定的文件格式。例如：Linux的文件系统是ext3，Windows10的文件系统是ntfs。\n2、指按特定格式进行了“格式化”的存储设备。\n3、指操作系统中(通常在内核中)用来管理文件,以及对文件进行操作的机制及其实现.\n\n\n文件系统   描述\next2      ext2是ext文件系统的升级,在Linux操作系统中应用广泛\next3      ext3是一款日志文件系统,能够在系统异常宕机时避免文件系统的资料丢失,并能自动修复数据的不一致和错误.但是,当磁盘容量较大时,所需的修复时间也会很长,而且也不能完全保证资料不会丢失\next4 ext4是ext3的改进版本,是RHEL6默认使用的文件系统,ext4文件系统性能强大,最大能够支持1EB(1EB=1073741824GB)的文件系统及无限数量的子目录,,此外,ext4文件系统能够分批量分配block(块),从而极大地提高了读写效率\nxfs  xfs是一款高性能的日志文件系统,也是RHEL7/8默认使用的文件系统.xfs文件系统的优势在于:当发生意外宕机后可以快速地回复可能被破坏的文件,而强大的日志功能只需花费极低的计算机和存储性能.它支持的最大存储容量为18EB,这意味着可以满足所有需求\nswap  swap是Linux交换分区所采用的文件系统.在Linux中使用交换分区管理内存的虚拟交换空间,虚拟内存能够在一定程序上缓解物理内存不足的问题\n\n\n\n\n\n\n\n\n\n\n\n不同的操作系统使用不同的文件系统,为了与其他操作系统兼容,通常操作系统都支持多种类型的文件系统\n\n\n3-2、创建文件系统mkfs -t [文件系统类型] [磁盘分区名]\n\n4、文件系统的挂载与卸载4-1 挂载文件系统\n将文件系统挂载到某个目录的过程称为“挂载”，文件系统所挂载的目录称为“挂载点”。\n挂载文件系统有两种方式，一种是命令行方式手动挂载，即手动将某个分区、光盘或软盘等挂载到Linux操作系统指定目录；另一种是系统启动时自动挂载，即通过配置文件“&#x2F;etc&#x2F;fstab”设置Linux启动时文件系统的自动挂载。\n挂载是用来告诉Linux操作系统，将一个磁盘空间放在哪个目录中，从而让用户能够调用里面的数据。\n一般而言，挂载点必须存在且应该是一个空目录，否则目录中原来的文件将被系统隐藏，只有将挂载设备卸载后才能显示并重新访问。\n\n4-2 命令行方式手动挂载  mountmount [选项] [磁盘分区名] [挂载点]\n选项：\n\t-t：指定设备的文件系统类型\n\t-r：以只读方式挂载\n\t-w：以读写方式挂载\n\t-a：挂载所有在配置文件“&#x2F;etc&#x2F;fatab”中定义的文件系统\n\n4-3 自动挂载\n将挂载信息按照指定格式写入配置文件“&#x2F;etc&#x2F;fatab”中，然后执行“mount -a”命令完成自动挂载。\n\n4-4 卸载文件系统umount[磁盘分区名或挂载点]\n\n&#x2F;&#x2F; umount命令的参数既可以是磁盘分区名,也可以是挂载点\n\n#使用卸载磁盘分区明的方式卸载&quot;&#x2F;dev&#x2F;sda3&quot;分区\n\numount &#x2F;dev&#x2F;sda3\n\n#使用卸载挂载点的方式卸载&quot;&#x2F;dev&#x2F;sd3&quot;分区\n\numount &#x2F;mnt&#x2F;sd3\n\n\n5 磁盘配合概述5-1 磁盘配额简介磁盘配额是一种磁盘空间管理机制。使用磁盘配额能够限制某个用户或用户组针对特定目录使用的磁盘空间，一旦超过限制就不允许继续使用。有效的磁盘配额管理可以确保用户使用系统的公平性和安全性。Linux 操作系统使用quota技术实现磁盘配额管理，一般从两方面进行限制，一方面是限制用户或用户组占用的磁盘空间，另一方面是限制用户或用户组所能创建的最大文件个数。此外，quota技术还有软限制和硬限制的功能,其含义如下。\n\nLinux 操作系统使用quota技术实现磁盘配额管理，一般从两方面进行限制，一方面是限制用户或用户组占用的磁盘空间，另一方面是限制用户或用户组所能创建的最大文件个数。此外，quota技术还有软限制和硬限制的功能,其含义如下。\n硬限制。当达到硬限制时会提示用户，且强制终止用户的操作\n\n5-2 设置磁盘配额步骤设置磁盘配额主要包括启动文件系统的磁盘配额功能、设置用户或用户组的磁盘配额和启动磁盘配额限制3个步骤。\n\n启动文件系统的磁盘配额功能可分为两个步骤，首先编辑“&#x2F;etc&#x2F;fstab”文件，然后重启系统。\n设置用户或用户组的磁盘配额，即限制用户或用户组使用的磁盘空间大小和文件个数。\n启动磁盘配额限制，这样用户或用户组的磁盘配额限制才会生效。\n\n、逻辑卷管理6-1、逻辑卷管理概述6-1-1、逻辑卷管理简介\n逻辑卷管理（logical volume manager, LVM是Linux操作系统中对磁盘分区进行管理的一种机制，它是建立在硬盘和分区之上，文件系统之下的一个逻辑层。\nLVM机制能够在保持现有数据不变的情况下动态调整磁盘容量，从而提高磁盘管理的灵活性。\n\n6-1-2、LVM基本术语\n(1）物理卷（physical volume, PV) 处于LVM的最底层，可以将其理解为物理磁盘或者磁盘分区。\n(2）卷组（volume group, VG)是由一个或多个物理卷组合而成，可以将卷组看作单独的逻辑磁盘。卷组创建后，可以在卷组中动态地添加或移除物理卷。\n(3）逻辑卷（logical volume, LV)是从卷组中分割出的一块空间。逻辑卷相当于分区，用于创建文件系统,并挂载到Linux操作系统的目录中使用。\n(4）物理区域（physical extent,PE)是物理卷中可用于分配的最小存储单元，物理区域的大小可根据实际情况在建立物理卷时指定，同一卷组中的所有物理卷的物理区域大小须一致。\n\n6-1-3、创建逻辑卷的步骤\n创建逻辑卷依次执行创建物理卷→创建卷组→创建逻辑卷一创建文件系统一挂载文件系统。\n当生产环境中不再使用逻辑卷时，将其删除即可。删除逻辑卷时，需要提前备份好重要的数据信息，然后依次删除逻辑卷、卷组和物理卷设备，这个顺序不可以颠倒。\n\n6-2、逻辑卷管理命令6-2-1、创建逻辑卷①创建物理卷   pvcreatepvcreate 物理卷名列表\n\n②创建卷组   vgcreatevgcreate 卷组名 物理卷名列表\n\n③创建逻辑卷   lvcreatelvcreate -n 逻辑卷名 -L 逻辑卷容量 卷组名\n\n6-2-2、显示逻辑卷①显示物理卷   pvdisplaypvdisplay [物理卷名]\n\n②显示卷组  vgdisplayvgdisplay [卷组名]\n\n③显示逻辑卷  lvdisplaylvdisplay [逻辑卷名]\n\n6-2-3、调整逻辑卷①扩展卷组  vgextendvgextend 卷组名 物理卷名\n\n②扩展逻辑卷  lvextendlvextend -L 逻辑卷容量 逻辑卷名\n\n③缩小卷组   vgreducevgreduce 卷组名 物理卷名\n\n④缩小逻辑卷  lvreducelvreduce -L 逻辑卷容量 逻辑卷名\n\n\n扩展逻辑卷前，首先需要卸载磁盘设备和挂载点的关联。为了降低丢失数据的风险，执行缩小逻辑卷操作时，一定要提前做好数据备份。\n\n6-2-4、删除逻辑卷","slug":"LinuxCipanguanli","date":"2023-04-11T07:50:59.000Z","categories_index":"","tags_index":"学习笔记,学习,笔记,Linux","author_index":"雨中冒险"},{"id":"fa3ea4386042aa2907f940e7c848f67b","title":"[Linux笔记]文件目录相关学习笔记2","content":"压缩文件解压文件\ngzip [选项] 压缩文件名&#x2F;解压缩文件名\n-d选项为解压缩,\n-r选项为参数为目录时,按目录树递归压缩目录中的所有文件\n\n\n\n文件打包&#x2F;解包命令\ntar [选项] 文件名 源文件或目录名\ntar [选项] 文件名 [-C 目标目录名] 解包文件格式\n-c选项为创建”.tar”格式的包文件\n-x选项为解开”.tar”格式的包文件\n-j选项为用bzip2命令压缩&#x2F;解压缩\n-z选项为用gzip命令压缩&#x2F;解压缩\n-v选项为显示文件压缩&#x2F;解压缩的过程\n-f选项为 目标文件吗\n-p选项为打包时保留原始文件及目录的权限\n\n\n\n文件访问权限更改文件访问权限的字符表示法和数字表示法对应关系\n\n表示方法\n读\n写\n执行\n读\n写\n执行\n读\n写\n执行\n\n\n字符表示法\nr\nw\nx\nr\nw\nx\nr\nw\nx\n\n\n数字表示法\n4\n2\n1\n4\n2\n1\n4\n2\n1\n\n\n权限分配\n文件所有者\n文件所属组\n其他用户\n\n\n\n\n\n文件的访问权限更改命令 -chmodchmod [-R] [ugoa] [+-&#x3D;] [rwx] 文件或目录名\n文件的归属更改命令 -chownchown [-R] 文件所有者[:文件所属组]\n\n\n\n\n\n\n\n\n\n当只更改文件的所属组时, 所属组前的冒号不能省略\n更改文件所属组 -chgrpchgrp [-R] 文件所属组 文件或目录名\n设置文件的隐藏权限 -chattr命令chattr [+-&#x3D;] [选项] 文件或目录名\n查看文件的隐藏权限 -lsattr命令lsattr [选项] 文件或目录名\n","slug":"LinuxWenjian2","date":"2023-04-04T06:52:59.000Z","categories_index":"","tags_index":"学习笔记,学习,笔记,Linux","author_index":"雨中冒险"},{"id":"a8408fc32594ecf5628e55e73d1bf27a","title":"[Linux笔记]文件目录相关学习笔记","content":"文件类别在终端中使用 ls 可以查看当前目录下的文件蓝色的代表目录淡蓝色代表链接文件绿色代表可执行文件红色代表压缩文件白色代表普通文件或其他文件黄色代表设备文件\n再使用 ls -a -l 可以查看文件详细信息\ndrwx d代表目录,rwx代表可读可写可执行r-w代表可读可执行–x代表可执行\nlrw-  l代表它是个软连接文件,rw-代表可读可写crwx c代表硬件字符设备,rwx代表可读可写可执行brwx c代表硬件块设备,rwx代表可读可写可执行srwx s代表管道文件,rwx代表可读可写可执行\n目录相关命令~代表用户主目录.代表工作目录..代表工作目录的上一层目录\n创建目录 –mkdir命令mkdir -p book&#x2F;santi-p的意思是 在没有book的状态下 县创建book目录,再创建santi目录如果目录没有任何路径,则在当前目录下创建,如果要当前目录下创建多个同等级目录可以使用mkdir [a,b,c]使用mkdir时要有对父目录的权限\n删除目录  –rmdir命令rmdir [-p] 目录名-p表示递归删除..假如santi目录删除后book目录为空 则book目录也删除使用rmdir时要有对父目录的权限\n目录跳转与查看等常用指令cd 切换到主目录cd .. 切换到当前目录上级目录cd ..&#x2F;.. 切换到当前目录的上两级目录cd &#x2F; 切换到根目录(&#x2F;)pwd 查看当前目录的绝对路径ls 显示当前目录下所有文件ls [可添加选项] -a 显示所有文件 包括以.开头的隐藏文件,-l以长葛市显示文件的属性,大小等详细信息,-d仅显示目录本身的详细信息,-R以递归方式显示目录以及其子目录内容,但更建议使用Tree这个指令查看\n文件相关命令创建空文件 –touch命令touch -d 文件 中间的-d选项代表touch {文件1,文件2,文件3} 同时创建多个文件touch book&#x2F;santi在book目录下创建文件santitouch -d 2021-10-10 \n查看文件类型 –file命令file 文件名\n\n\n\n\n\n\n\n\n\n因为linux中文本,目录,设备统称为文件,所以最好用file 查看文件类型\n复制文件或目录 –cp命令cp [选项] 源文件或目录名 目标文件或目录名-r选项表示递归复制整个目录树-f选项表示若目标文件已存在,则强制覆盖-i选项表示若目标文件已存在,则询问用户是否覆盖-p选项表示复制文件的属性\n删除文件或目录 –rm命令rm [选项] 文件或目录名-r选项表示递归删除整个目录树-f选项表示不提示直接删除-i选项表示询问用户是否删除不加任何选项则默认相当于-i选项若删除目录,必须使用-r选项\n移动文件或目录 – mv命令mv [选项] 源文件或目录名 目标文件或目录名-f 不询问用户,强制移动-i  询问用户是否移动\n\n\n\n\n\n\n提示\n使用MV命令后,会默认删除源文件…如果在同一个目录中对文件使用mv命令,则表示对该文件重命名\n\n查找文件或目录 – find命令find [查找范围] [查找条件] 查找范围为路径查找条件有-name  查找指定名称的文件         -size  查找指定大小的文件         -user  查找指定用户的文件         -group  查找用户指定用户组的文件          –type  查找指定类型的文件\n为文件创建链接  – ln命令ln -s 源文件或目录名 目标文件或目录名-s 选项为为创建软链接\n\n\n\n\n\n\n提示\n软链接文件其实是指向原始文件所在的路径,类似windows中的快捷方式,将软链接删除对原始文件没有影响,而创建硬链接文件后,两个文件名指向硬盘上同一块储存空间,对两个文件中任何一个文件的内容进行修改都会影响到另一个文件…同时注意不能位目录创建硬链接\n\n文件内容操作命令查看文件或目录命令 – cat命令cat [选项] 文件或者目录名-a选项表示现实行号\n\n\n\n\n\n\n\n\n\ncat命令还可以链接两个或者多个文件,如 cat f1 f2 &gt;f3 是只将文件F1F2内容合并,然后通过输出重定向符&gt;输出到F3文件里\n分屏显示文件内容 – more命令和less命令more [选项] 文件名more命令中常用的选项是-n,代表enter表示space(空格)表示往下翻一页q表示退出less [选项] 文件名\n\n\n\n\n\n\n\n\n\nless命令其实是more命令的升级版,功能比more命令更灵活,按下pageUp与pageDown翻页\n显示文件开始内容 – head命令head [-n] 文件名-n表示默认显示行数 不填写则默认显示前十行\n显示文件末尾内容 – tail命令tail [选项] 文件名-n选项表示默认显示行数 不填写则默认显示末尾前十行-f选项表示命令超过文件\n统计文件内容 – wc命令wc [选项] 文件名-l选项统计行数-w选项统计单词数-c选项统计字节数\n\n\n\n\n\n\n\n\n\n默认是不添加选项-lwc \n查找文件中符合条件的行  – grep命令grep [选项] 要查找的文件内容或者文件(可以使用正则表达式) 目录或文件-v选项为反转查找,输出与条件不相符的行-n选项为显示符合的字符串之间,标出该行行号-i选项为查找时忽略大小写\n查看和编辑符合条件的行 – sed命令sed [选项] [‘命令表达式’] [目标文件名]-n选项表示显示行号-p选项为打印,通常与sed -n一起使用-s选项为替换,通常搭配正则表达式使用-d选项为删除sed -n [‘40’,’$p’] [文件名]表示从40行开始到最后一行打印输出出来\n\n\n\n\n\n\n\n\n\nsed命令查找替换字符串功能中,命令表达式的通用格式为’s&#x2F;旧模式&#x2F;新模式&#x2F;标志’.其中,s表示替换功能;常用的标志为g,其意义为全局替换,将旧模式里的内容替换为新模式内容.\n分析和处理文件内容 – awk命令awk [选项] [‘命令表达式’] [目标文件名]-F选项表示指定文件的分隔符,如果不加-F,则以空格或制表符作为分隔符进行分析\n\n\n\n内建变量\n含义\n\n\n\n$n\n当前行的第n列,n值大雨等于1\n\n\n$0\n完整的数据行\n\n\nNF\n数据行的列个数\n\n\nNR\n行号,从1开始\n\n\n","slug":"LinuxWenjian","date":"2023-03-28T06:53:46.000Z","categories_index":"","tags_index":"学习笔记,学习,笔记,Linux","author_index":"雨中冒险"},{"id":"79aba1709dbb470fdcd9b5b7bdd25c83","title":"[Linux笔记]终端的超级管理员操作命令等","content":"\n\n\n\n\n\n\n\n\n\nLinux权限的概念Linux下默认有两种用户：超级用户（root）、普通用户。root：超级管理员，具有非常高的权限，可以再linux系统下做任何事情，不受限制普通用户：具有一般权限，需要受权限约束（由root用户创建的）超级用户：可以在linux系统下做任何事情，不受限制普通用户：在linux下做有限的事情。超级用户的命令提示符是“#”，普通用户的命令提示符是“$”。用户登录时尽量少用 root 帐号登录，因为它是系统管理员，最大的权限，避免操作失误。退出登录使用ctrl+d或者命令行输入exit。Shell中使用su -进行超级管理员登陆\nshell终端的用户权限修改在终端中庸超级管理员登陆并使用visudo进入到etc&#x2F;suders.tmp使用Ctrl+O进行写入,回车确认路径在#User privilege specification 下里添加用户名按照root权限规则写好之后Ctrl+X进行保存,最后确认即可操作完成后,添加的用户便拥有了超级用户的权限\nsudo指令普通用户权限，并没有最高 root 权限，如果普通用户需要使用 root 权限的时候， 通常都会在命令前面加上 sudo 。sudo是临时权限提升，以root身份来执行后面的命令以root用户的身份来创建文件root.txtsu和sudo的区别：su是身份完全转变，sudo是普通用户临时转变成root用户来执行命令，该命令执行完，仍为普通用户。第一次使用sudo时，发现无法使用，怎么解决？根本原因是用户没有加入到sudo的配置文件里，需要添加信任关系，以后再学习。\nLinux用户管理实现用户账号的管理，要完成的工作主要有如下几个方面：\n（1）用户账号的添加、删除与修改；（2）用户密码的管理；（3）用户组的管理。\nwhoami指令查看当前系统当前账号的用户名，等价于who am i指令\nwho指令查看当前所有登录系统的用户信息\nuseradd指令useradd指令功能：添加用户语法：useradd [选项] 用户名常用选项:（1）-c comment ：指定一段注释性描述。（2）-d 目录 ：指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。若不指定目录，默认会自动在home目录下创建一个和用户名相同的目录。（3）-g 用户组 ：添加用户时指定用户所属的用户组（4）-G 用户组，用户组 ：指定用户所属的附加组（5）-s Shell文件 ：指定用户的登录Shell。（6）-u 用户密码：指定用户的密码，如果同时有-o选项，则可以重复使用其他用户的标识号。\nuserdel指令如果一个用户的账号不再使用，可以从系统中删除。删除用户账号就是要将&#x2F;etc&#x2F;passwd等系统文件中的该用户记录删除，必要时还删除用户的主目录。\n功能：删除帐号语法：userdel [选项] 用户名\n-r，把用户的主目录一起删除,默认情况下只删除用户在系统文件中（主要是&#x2F;etc&#x2F;passwd, &#x2F;etc&#x2F;shadow, &#x2F;etc&#x2F;group等）的记录，不删除用户主目录，若想一同删除用户主目录，要使用-r选项\npasswd指令用户管理的一项重要内容是用户密码的管理。用户账号刚创建时没有密码，但是被系统锁定，无法使用，必须为其指定密码后才可以使用（此时由root用户指定密码），即使是指定空密码。\n超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。\n功能：指定用户密码或者修改用户密码语法：passwd [选项] 用户名常用选项：\n（1）-l ：锁定密码，即禁用账号。（2）-u ：密码解锁。（3）-d ：使账号无密码。（4）-f ：强迫用户下次登录时修改密码。\n如果不写用户名，则默认修改当前用户的密码。\n普通用户修改自己的密码时，passwd命令会先询问原密码，验证后再要求用户输入两遍新密码，如果两次输入的密码一致，则将这个密码指定给用户；而超级用户为用户指定密码时，就不需要知道原密码\nusermod指令功能：根据实际情况更改已有用户的有关属性，如用户号、主目录、用户组、登录Shell等。语法：usermod [选项] 用户名常用选项：-c, -d, -m, -g, -G, -s, -u以及-o等，这些选项的意义与useradd命令中的选项一样，可以为用户指定新的资源值。（1）-c comment ：指定一段注释性描述。（2）-d 目录 ：指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。若不指定目录，默认会自动在home目录下创建一个和用户名相同的目录。（3）-g 用户组 ：改变用户所在的用户组。（4）-G 用户组，用户组 ：指定用户所属的附加组（5）-s Shell文件 ：指定用户的登录Shell。（6）-u 用户密码：指定用户的密码，如果同时有-o选项，则可以重复使用其他用户的标识号。（7）-e 设置用户的失效时间,通常为XXXX-XX-XX格式.到指定时间后该用户自动失效另外，有些系统可以使用选项：-l 新用户名这个选项指定一个新的账号，即将原来的用户名改为新的用户名。\nid指令 - 查询用户信息功能：查询用户信息语法：id 用户名\nLinux用户组管理用户组类似于角色，系统可以对有共性的多个用户进行统一的管理。每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。\n用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对&#x2F;etc&#x2F;group文件的更新。\ngroupadd 指令功能：增加一个新的用户组语法：groupadd [选项] 用户组\n常用选项：（1）-g GID ：指定新用户组的组标识号（GID）。（2）-o ：一般与-g选项同时使用，表示新用户组的GID可以与系统已有用户组的GID相同。可以在创建新用户时就指定用户组：useradd -g 用户组 用户名但是这种写法的前提是，先创建用户组，用户组已经存在。\ngroupdel指令功能：删除一个已有的用户组语法：groupdel 用户组\ngroupmod - 修改用户组自身的属性功能：修改用户组自身的属性语法：groupmod [选项] 用户组常用选项：\n（1）-g GID ：为用户组指定新的组标识号。（2）-o 与-g选项同时使用，用户组的新GID可以与系统已有用户组的GID相同。（3）-n 新用户组 ：将用户组的名字改为新名字\ngroups指令 - 显示用户所属组groups使用即可\n","slug":"Linux","date":"2023-03-21T06:53:46.000Z","categories_index":"","tags_index":"学习笔记,学习,笔记,Linux","author_index":"雨中冒险"},{"id":"4ac8b1aa8edb55b3f8a5ed8b31c472a5","title":"[Jquery笔记]过滤选择器","content":"\n\n\n\n\n\n\n\n\n\n\n\n基本过滤选择器表格示例\n\n\n选择器\n示例\n示例结果\n说明\n\n\n\n:first\n$(“tr:first”)\n选择所有tr元素中第一个元素\n匹配找到的第一个元素\n\n\n:last\n$(“tr:last”)\n选择所有tr元素中最后一个tr元素\n匹配找到的最后一个元素\n\n\nnot(selector)\n$(“input:not(:checked)”)\n选择没有被选中的input元素\n去除所有与给定个选择器匹配的元素\n\n\n:even\n$(“tr:even”)\n选择索引为偶数的tr元素\n匹配所有索引值为偶数的元素,从0开始计数\n\n\n:odd\n$(“tr:odd”)\n选择索引为奇数的tr元素\n匹配所有索引值为奇数的元素,从0开始计数\n\n\n:eq(index)\n$(“tr:eq(0)”)\n选择索引值为选中的元素\n匹配一个指定索引值的元素\n\n\n:gt(index)\n$(“tr:gt(0)”)\n选择索引值大于0的元素\n匹配所有大于给定索引值的元素\n\n\n:lt(index)\n$(“tr:lt(2)”)\n选择索引值小于2的元素\n匹配所有小于给定索引值的元素\n\n\n:header\n$(“:header”)\n选择网页中所有的H1,H2,H3等\n匹配如H1,H2,H3等标题元素\n\n\n:animated\n$(“div:animated”)\n选择正在执行动画的div元素\n匹配所有正在执行动画效果的元素\n\n\n \n\n代码示例&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n\n    &lt;style&gt;\n        li &#123;\n            width: 50px;\n            height: 20px;\n            margin: 10px;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;script src&#x3D;&quot;.&#x2F;jquery-3.6.3.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;h1&gt;过滤选择器&lt;&#x2F;h1&gt;\n    &lt;h2&gt;基本选择器&lt;&#x2F;h2&gt;\n    &lt;ul&gt;\n        &lt;li&gt;第0项&lt;&#x2F;li&gt;\n        &lt;li&gt;第1项&lt;&#x2F;li&gt;\n        &lt;li&gt;第2项&lt;&#x2F;li&gt;\n        &lt;li class&#x3D;&quot;three&quot;&gt;第3项&lt;&#x2F;li&gt;\n        &lt;li&gt;第4项&lt;&#x2F;li&gt;\n    &lt;&#x2F;ul&gt;\n    &lt;button id&#x3D;&quot;firstBtn&quot;&gt;选择第一个li标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;lastBtn&quot;&gt;现在最后一个li标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;notSelBtn&quot;&gt;选择除class属性为three的所有li标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;evenBtn&quot;&gt;选择索引为偶数的标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;oddBtn&quot;&gt;选择索引为奇数的标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;indexBtn&quot;&gt;选择索引值为3的li标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;gtBtn&quot;&gt;选择索引值大于3的li标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;hBtn&quot;&gt;选择网页中所有h标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;refreBtn&quot;&gt;刷新页面&lt;&#x2F;button&gt;\n    &lt;script&gt;\n        $(function() &#123;\n            $(&quot;#firstBtn&quot;).click(function() &#123;\n                $(&quot;li:first&quot;).css(&#123;\n                    color: &#39;red&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#lastBtn&quot;).click(function() &#123;\n                $(&quot;li:last&quot;).css(&#123;\n                    color: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#notSelBtn&quot;).click(function() &#123;\n                $(&quot;li:not(.three)&quot;).css(&#123;\n                    color: &#39;blue&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#evenBtn&quot;).click(function() &#123;\n                $(&quot;li:even&quot;).css(&#123;\n                    color: &#39;aqua&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#oddBtn&quot;).click(function() &#123;\n                $(&quot;li:odd&quot;).css(&#123;\n                    color: &#39;black&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#indexBtn&quot;).click(function() &#123;\n                $(&quot;li:eq(3)&quot;).css(&#123;\n                    color: &#39;gray&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#gtBtn&quot;).click(function() &#123;\n                $(&quot;li:gt(3)&quot;).css(&#123;\n                    color: &#39;yellow&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#hBtn&quot;).click(function() &#123;\n                $(&quot;:header&quot;).css(&#123;\n                    color: &#39;green&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#refreBtn&quot;).click(function() &#123;\n                window.location.reload();\n            &#125;)\n        &#125;)\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n\n&lt;&#x2F;html&gt;\n\n\n\n内容过滤选择器表格示例\n\n\n选择器\n示例\n示例结果\n说明\n\n\n\n:contains(text)\n$(“div:contains(‘world’)”)\n选择含有文本world的div元素\n匹配包含给定文本的元素\n\n\n:empty\n$(“div:empty”)\n选择不包含子元素(或者文本元素)的div空元素\n匹配所有不包含子元素或者文本的空元素\n\n\n:has(selector)\n$(“div:has(‘.mini’)”)\n选取含有class为mini元素的div元素\n匹配含有选择器所匹配的元素的元素\n\n\n:parent\n$(“div:parent”)\n选择含有子元素(或者文本元素)的div元素\n匹配含有子元素或者文本的元素\n\n\n\n\n代码示例&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n    &lt;style&gt;\n        body &#123;\n            font-size: 12px;\n            text-align: center;\n        &#125;\n        div &#123;\n            border: solid 1px black;\n            float: left;\n            margin: 10px;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;div style&#x3D;&quot;width: 100px;height:100px&quot;&gt;hello world&lt;&#x2F;div&gt;\n    &lt;div style&#x3D;&quot;width: 100px;height:100px&quot; class&#x3D;&quot;mini&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;div style&#x3D;&quot;width: 100px;height:100px&quot;&gt;\n        &lt;div style&#x3D;&quot;width: 70px;height:70px&quot; class&#x3D;&quot;mini&quot;&gt;class&#x3D;mini&lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n    &lt;button id&#x3D;&quot;firstBtn&quot;&gt;选择含有文本world的div元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;secondBtn&quot;&gt;选择不包含子元素(或者文本元素)的div空元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;thirdBtn&quot;&gt;选择含有class为mini的元素的div元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;fourthBtn&quot;&gt;选择含有子元素(或者含有文本元素)的div元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;refreBtn&quot;&gt;刷新额面&lt;&#x2F;button&gt;\n    &lt;script src&#x3D;&quot; .&#x2F;jquery-3.6.3.js &quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script&gt;\n        $(function() &#123;\n            $(&quot;#firstBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:contains(&#39;world&#39;)&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#secondBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:empty&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#thirdBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:has(.mini)&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n\n            $(&quot;#fourthBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:parent&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#refreBtn&quot;).click(function() &#123;\n                window.location.reload()\n            &#125;)\n\n        &#125;)\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n\n\n可见性过滤器表格示例\n\n\n选择器\n示例\n示例结果\n说明\n\n\n\n:hidden\n$(‘div:hidden’)\n选择所有不可见的div元素\n匹配所有的不可见元素\n\n\n:visible\n$(‘div:visible’)\n选择所有可见的div元素\n匹配所有可见的元素\n\n\n\n\n\n代码示例&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n    &lt;style&gt;\n        body &#123;\n            font-size: 12px;\n            text-align: center;\n        &#125;\n        \n        div &#123;\n            border: solid 1px black;\n            float: left;\n            margin: 10px;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n\n&lt;body&gt;\n    &lt;div style&#x3D;&quot;width: 100px;height:100px&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;div style&#x3D;&quot;width: 100px;height:100px;display: none;&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;button id&#x3D;&quot;firstBtn&quot;&gt;选取所有不可见元素显示出来&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;secondBtn&quot;&gt;选取所有可见的div元素&lt;&#x2F;button&gt;\n    &lt;script src&#x3D;&quot;.&#x2F;jquery-3.6.3.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script&gt;\n        $(function() &#123;\n            $(&quot;#firstBtn&quot;).click(function() &#123;\n                $(&quot;div:hidden&quot;).show(3000).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#secondBtn&quot;).click(function() &#123;\n                $(&quot;div:visible&quot;).hide(3000).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n        &#125;)\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n\n\n属性过滤选择器表格示例\n\n\n选择器\n示例\n示例结果\n说明\n\n\n\n[attribute]\n$(“div[id]”)\n选择所有含有id属性的div元素\n匹配包含给定属性的元素\n\n\n[attribute&#x3D;value]\n$(“div[title&#x3D;’world’]”)\n选择属性title为world的div元素\n匹配给定的属性高是某个特定值的元素\n\n\n[attribute!&#x3D;value]\n$(“div[title!&#x3D;’world’]”)\n选择属性title部位world的div元素,包含灭有属性title的div元素\n匹配给定的属性不包含某个特定值的元素\n\n\n[attribute^&#x3D;value]\n$(“div[title^&#x3D;’w’]”)\n选择title以w开始的div元素\n匹配给定的属性是以某些之开始的元素\n\n\n[attribute$&#x3D;value]\n$(“div[title$&#x3D;’d’]”)\n选择属性title以d结尾的div元素\n匹配给定的属性是以某些值结尾的元素\n\n\n[attribute*&#x3D;value]\n$(“div[title*&#x3D;’world’]”)\n选择属性title含有world的div元素\n匹配给定的属性是否包含某些值的元素\n\n\n[attributeFilter1][attributeFilter2][attributeFilterN]\n$(“div[id][title*&#x3D;’world’]”)\n选择含有id属性并且title含有world的div元素\n符合属性选择器,需要同时满足多个条件时使用,每选择一次缩小一次范围\n\n\n\n\n代码示例&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n    &lt;style&gt;\n        body &#123;\n            font-size: 12px;\n            text-align: center;\n        &#125;\n        div &#123;\n            border: solid 1px black;\n            float: left;\n            margin: 10px;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;div style&#x3D;&quot;width: 150px;height:150px&quot; title&#x3D;&quot;hello world&quot;&gt;title&#x3D;&quot;hello world&quot;&lt;&#x2F;div&gt;\n    &lt;div style&#x3D;&quot;width: 120px;height:120px&quot; title&#x3D;&quot;test&quot; id&#x3D;&quot;tt&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;div style&#x3D;&quot;width: 120px;height:120px&quot;&gt; 无title属性&lt;&#x2F;div&gt;\n    &lt;button id&#x3D;&quot;firstBtn&quot;&gt;选择所有含有title属性的div&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;secondBtn&quot;&gt;选择属性title为helloworld的div&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;thirdBtn&quot;&gt;选择属性title不为helloworld的div&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;fourthBtn&quot;&gt;选择title以h开头的div元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;fifthBtn&quot;&gt;选择属性title以t结束的div&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;sixthBtn&quot;&gt;选择属性title含有world的div&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;seventhBtn&quot;&gt;选择含有id属性并且title含有&quot;test&quot;的div&lt;&#x2F;button&gt;\n&lt;&#x2F;body&gt;\n\n&lt;script src&#x3D;&quot;.&#x2F;jquery-3.6.3.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script&gt;\n    $(function() &#123;\n        $(&quot;#firstBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[title]&quot;).css(&#123;\n                backgroundColor: &#39;pink&#39;\n            &#125;)\n        &#125;)\n        $(&quot;#secondBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[title&#x3D;&#39;hello world&#39;]&quot;).css(&#123;\n                backgroundColor: &#39;pink&#39;\n            &#125;)\n        &#125;)\n        $(&quot;#thirdBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[title!&#x3D;&#39;hello world&#39;]&quot;).css(&#123;\n                backgroundColor: &#39;pink&#39;\n            &#125;)\n        &#125;)\n        $(&quot;#fourthBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[title^&#x3D;&#39;h&#39;]&quot;).css(&#123;\n                backgroundColor: &#39;pink&#39;\n            &#125;)\n\n        &#125;)\n        $(&quot;#fifthBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[title$&#x3D;&#39;t&#39;]&quot;).css(&#123;\n                backgroundColor: &#39;pink&#39;\n            &#125;)\n        &#125;)\n        $(&quot;#sixthBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[title*&#x3D;&#39;world&#39;]&quot;).css(&#123;\n                backgroundColor: &#39;pink&#39;\n            &#125;)\n        &#125;)\n        $(&quot;#seventhBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[id][title*&#x3D;&#39;test&#39;]&quot;).css(&#123;\n                backgroundColor: &quot;pink&quot;\n            &#125;)\n        &#125;)\n    &#125;)\n&lt;&#x2F;script&gt;\n&lt;&#x2F;html&gt;\n\n\n子元素过滤选择器表格示例\n\n\n选择器\n示例\n示例结果\n说明\n\n\n\n:nth-child(index&#x2F;even&#x2F;odd&#x2F;equation)\n$(“div:nth-child(2)”)\n选择所有div元素,且此元素为其父元素的第二个子元素\n匹配每个父元素下的第n个子元素或偶(奇)元素,注意,这里的index从1开始,而不是0\n\n\n:first-child\n$(“div:first-child”)\n选择所有div元素,且此元素为其父元素下的第一个子元素\n匹配每个父元素下的第一个子元素\n\n\n:last-child\n$(“div:last-child”)\n选择所有div元素,且此元素为其父元素下的最后一个子元素\n匹配每个父元素中得到最后一个子元素\n\n\n:only-child\n$(“div:only-child”)\n选择所有div元素,且瓷元素为其父元素下唯一子元素\n如果某个元素是父元素中唯一的子元素,那将会被匹配\n\n\n\n\n\n\n\n\n注意!\n该过滤器表格中第一第二示例中,div本身也将作为父元素的子元素调用例:  body&#123;\n &lt;div class&#x3D;&#39;one&#39;&gt; 内包含各种子元素 &lt;&#x2F;div&gt;\n &lt;div class&#x3D;&#39;two&#39;&gt; 内包含各种子元素 &lt;&#x2F;div&gt;\n &#125;  如果在选择器中使用了$(div:nth-child(2))的元素背景色为黑色  那么作为body的第二个子元素…即class为two的div的盒子背景色也将为黑色  在这同时class为two的div的第二个子元素背景色也将为黑色  具体详细情况请查看代码实例\n\n\n\n\n代码示例&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n    &lt;style&gt;\n        body &#123;\n            font-size: 12px;\n            text-align: center;\n        &#125;\n        div &#123;\n            border: solid 1px black;\n            float: left;\n            margin: 10px;\n            height: 200px;\n            width: 200px;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;div class&#x3D;&quot;one&quot;&gt;\n        class&#x3D;one\n        &lt;div class&#x3D;&quot;two&quot; style&#x3D;&quot;height: 70px;width:70px;&quot;&gt;\n            class&#x3D;two&lt;&#x2F;div&gt;\n        &lt;div class&#x3D;&quot;three&quot; style&#x3D;&quot;height: 70px;width: 70px;&quot;&gt;\n            class&#x3D;three&lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n    &lt;div class&#x3D;&quot;one&quot;&gt;\n        class&#x3D;one\n        &lt;div class&#x3D;&quot;two&quot; style&#x3D;&quot;height: 70px; width: 70px;&quot;&gt;\n            class&#x3D;two&lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n    &lt;button id&#x3D;&quot;firstBtn&quot;&gt;选择所有div元素，且此元素为其父元素下的第二个子元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;secondBtn&quot;&gt;选择所有div元素，且此元素为其父元素下的第一个子元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;thirdBtn&quot;&gt;选择所有class属性不等于one的div，且此元素为其父元素下的最后一个子元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;fourthBtn&quot;&gt;选择所有div元素，且此元素为其父元素下的唯一子元素&lt;&#x2F;button&gt;\n    &lt;script src&#x3D;&quot;.&#x2F;jquery-3.6.3.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script&gt;\n        $(function() &#123;\n            $(&quot;#firstBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:nth-child(2)&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#secondBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:first-child&quot;).css(&#123;\n                    backgroundColor: &quot;pink&quot;\n                &#125;)\n            &#125;)\n            $(&quot;#thirdBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div[class!&#x3D;&#39;one&#39;]:last-child&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#fourthBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:only-child&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n        &#125;)\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n\n\n\n表单对象属性过滤选择器表格示例\n\n\n选择器\n示例\n示例结果\n说明\n\n\n\n:enabled\n$(“input:enabled”)\n选择表单内所有可用的input元素\n匹配所有可用元素\n\n\n:disabled\n$(“input:disabled”)\n选择表单内所有不可用的input元素\n匹配所有不可用元素\n\n\n:checked\n$(“input:checked”)\n选择所有选中的input的元素\n匹配所有选中的元素(复选框,单选框等)\n\n\n:selected\n$(“select option:selected”)\n选择select中所有被选中的option元素\n匹配所有被选中的选项元素(主要是下啦列表框)\n\n\n\n\n代码示例\n\n\n\n\n\n\n注意\n待补完\n\n","slug":"Jquery_guolvxuanzeqi","date":"2023-03-14T04:43:19.000Z","categories_index":"","tags_index":"jquery,学习笔记,过滤选择器,选择器,学习,笔记","author_index":"雨中冒险"},{"id":"6a96dc2d408425cc16ea3e6b93d24f8d","title":"[博客搭建系列]Hexo中的一些常用指令","content":"\n\n\n\n\n\n提示\n 文中内容以百度结果与自身实践结合产生..结合了笔者自身的一些理解..如有错误欢迎指正…\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\nhexo g  || hexo generate..该命令执行后在hexo站点根目录下生成public文件夹…\n\n\nhexo d通过public文件夹在本地生成.deploy_git文件夹…并将编译后的文件上传至 GitHub…通常在上文中的hexo g后使用…\n\n\nhexo clean把上文中的生成public文件夹删除…也就是俗称的清除缓存…在特定的条件下会使用…\n\n\nhexo s  || hexo server启动本地hexo服务器…一般默认地址为:\n\n\n\n\n\n\n\n\n\nhttp://localhost:4000/\n在git页面使用ctrl+c可以快捷关闭服务器…常用于本地测试一些页面修改…支持在线查看(即不关闭服务器的情况下修改参数查看修改页面…)但也有部分核心参数需要重新启动服务器才能查看到修改后的效果…\nhexo new + 文件名使用hexo在&#x2F;source&#x2F;_posts文件夹里创建一篇文章会使用new后面的文件名作为标题文章内会自带创建时间同时会在&#x2F;source&#x2F;_posts夹下创建同名的文件夹用于存放图片等用途👈该路径存储图片等方法不常用\n","slug":"hexo","date":"2023-03-07T14:39:48.000Z","categories_index":"","tags_index":"hexo,博客搭建","author_index":"雨中冒险"},{"id":"3bb9d12e8f2104afcad3b378e61ce234","title":"Remenber","content":"\n\n\n\n\n\n\n这不是你该来的地方\n\n\n\n\n\n\n\n\n\n\n\nSteam: 40908431\n","slug":"Remenber","date":"2023-03-01T14:39:48.000Z","categories_index":"","tags_index":"Remenber","author_index":"雨中冒险"}]
[{"id":"a8408fc32594ecf5628e55e73d1bf27a","title":"[Linux笔记]文件目录相关学习笔记","content":"文件类别在终端中使用 ls 可以查看当前目录下的文件蓝色的代表目录淡蓝色代表链接文件绿色代表可执行文件红色代表压缩文件白色代表普通文件或其他文件黄色代表设备文件\n再使用 ls -a -l 可以查看文件详细信息\ndrwx d代表目录,rwx代表可读可写可执行r-w代表可读可执行–x代表可执行\nlrw-  l代表它是个软连接文件,rw-代表可读可写crwx c代表硬件字符设备,rwx代表可读可写可执行brwx c代表硬件块设备,rwx代表可读可写可执行srwx s代表管道文件,rwx代表可读可写可执行\n目录~代表用户主目录.代表工作目录..代表工作目录的上一层目录\n创建目录 –mkdir命令mkdir -p book&#x2F;santi-p的意思是 在没有book的状态下 县创建book目录,再创建santi目录如果目录没有任何路径,则在当前目录下创建,如果要当前目录下创建多个同等级目录可以使用mkdir [a,b,c]使用mkdir时要有对父目录的权限\n删除目录  –rmdir命令rmdir [-p] 目录名-p表示递归删除..假如santi目录删除后book目录为空 则book目录也删除使用rmdir时要有对父目录的权限\n目录跳转与查看等常用指令cd 切换到主目录cd .. 切换到当前目录上级目录cd ..&#x2F;.. 切换到当前目录的上两级目录cd &#x2F; 切换到根目录(&#x2F;)pwd 查看当前目录的绝对路径ls 显示当前目录下所有文件ls [可添加选项] -a 显示所有文件 包括以.开头的隐藏文件,-l以长葛市显示文件的属性,大小等详细信息,-d仅显示目录本身的详细信息,-R以递归方式显示目录以及其子目录内容,但更建议使用Tree这个指令查看\n文件创建空文件 –touch命令touch -d 文件 中间的-d选项代表touch {文件1,文件2,文件3} 同时创建多个文件touch book&#x2F;santi在book目录下创建文件santitouch -d 2021-10-10 \n查看文件类型 –file命令file 文件名\n\n\n\n\n\n\n\n\n\n因为linux中文本,目录,设备统称为文件,所以最好用file 查看文件类型\n复制文件或目录 –cp命令cp [选项] 源文件或目录名 目标文件或目录名-r选项表示递归复制整个目录树-f选项表示若目标文件已存在,则强制覆盖-i选项表示若目标文件已存在,则询问用户是否覆盖-p选项表示复制文件的属性\n删除文件或目录 –rm命令rm [选项] 文件或目录名-r选项表示递归删除整个目录树-f选项表示不提示直接删除-i选项表示询问用户是否删除不加任何选项则默认相当于-i选项若删除目录,必须使用-r选项\n移动文件或目录 –mv命令mv [选项] 源文件或目录名 目标文件或目录名-f 不询问用户,强制移动-i  询问用户是否移动\n\n\n\n\n\n\n提示\n使用MV命令后,会默认删除源文件…如果在同一个目录中对文件使用mv命令,则表示对该文件重命名\n\n查找文件或目录 –find命令find [查找范围] [查找条件] 查找范围为路径查找条件有-name  查找指定名称的文件         -size  查找指定大小的文件         -user  查找指定用户的文件         -group  查找用户指定用户组的文件          –type  查找指定类型的文件\n为文件创建链接  –ln命令ln -s 源文件或目录名 目标文件或目录名-s 选项为为创建软链接\n\n\n\n\n\n\n提示\n软链接文件其实是指向原始文件所在的路径,类似windows中的快捷方式,将软链接删除对原始文件没有影响,而创建硬链接文件后,两个文件名指向硬盘上同一块储存空间,对两个文件中任何一个文件的内容进行修改都会影响到另一个文件…同时注意不能位目录创建硬链接\n\n","slug":"LinuxWenjian","date":"2023-03-28T06:53:46.000Z","categories_index":"","tags_index":"学习笔记,学习,笔记,Linux","author_index":"雨中冒险"},{"id":"79aba1709dbb470fdcd9b5b7bdd25c83","title":"[Linux笔记]终端的超级管理员操作命令等","content":"\n\n\n\n\n\n\n\n\n\nLinux权限的概念Linux下默认有两种用户：超级用户（root）、普通用户。root：超级管理员，具有非常高的权限，可以再linux系统下做任何事情，不受限制普通用户：具有一般权限，需要受权限约束（由root用户创建的）超级用户：可以在linux系统下做任何事情，不受限制普通用户：在linux下做有限的事情。超级用户的命令提示符是“#”，普通用户的命令提示符是“$”。用户登录时尽量少用 root 帐号登录，因为它是系统管理员，最大的权限，避免操作失误。退出登录使用ctrl+d或者命令行输入exit。Shell中使用su -进行超级管理员登陆\nshell终端的用户权限修改在终端中庸超级管理员登陆并使用visudo进入到etc&#x2F;suders.tmp使用Ctrl+O进行写入,回车确认路径在#User privilege specification 下里添加用户名按照root权限规则写好之后Ctrl+X进行保存,最后确认即可操作完成后,添加的用户便拥有了超级用户的权限\nsudo指令普通用户权限，并没有最高 root 权限，如果普通用户需要使用 root 权限的时候， 通常都会在命令前面加上 sudo 。sudo是临时权限提升，以root身份来执行后面的命令以root用户的身份来创建文件root.txtsu和sudo的区别：su是身份完全转变，sudo是普通用户临时转变成root用户来执行命令，该命令执行完，仍为普通用户。第一次使用sudo时，发现无法使用，怎么解决？根本原因是用户没有加入到sudo的配置文件里，需要添加信任关系，以后再学习。\nLinux用户管理实现用户账号的管理，要完成的工作主要有如下几个方面：\n（1）用户账号的添加、删除与修改；（2）用户密码的管理；（3）用户组的管理。\nwhoami指令查看当前系统当前账号的用户名，等价于who am i指令\nwho指令查看当前所有登录系统的用户信息\nuseradd指令useradd指令功能：添加用户语法：useradd [选项] 用户名常用选项:（1）-c comment ：指定一段注释性描述。（2）-d 目录 ：指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。若不指定目录，默认会自动在home目录下创建一个和用户名相同的目录。（3）-g 用户组 ：添加用户时指定用户所属的用户组（4）-G 用户组，用户组 ：指定用户所属的附加组（5）-s Shell文件 ：指定用户的登录Shell。（6）-u 用户密码：指定用户的密码，如果同时有-o选项，则可以重复使用其他用户的标识号。\nuserdel指令如果一个用户的账号不再使用，可以从系统中删除。删除用户账号就是要将&#x2F;etc&#x2F;passwd等系统文件中的该用户记录删除，必要时还删除用户的主目录。\n功能：删除帐号语法：userdel [选项] 用户名\n-r，把用户的主目录一起删除,默认情况下只删除用户在系统文件中（主要是&#x2F;etc&#x2F;passwd, &#x2F;etc&#x2F;shadow, &#x2F;etc&#x2F;group等）的记录，不删除用户主目录，若想一同删除用户主目录，要使用-r选项\npasswd指令用户管理的一项重要内容是用户密码的管理。用户账号刚创建时没有密码，但是被系统锁定，无法使用，必须为其指定密码后才可以使用（此时由root用户指定密码），即使是指定空密码。\n超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。\n功能：指定用户密码或者修改用户密码语法：passwd [选项] 用户名常用选项：\n（1）-l ：锁定密码，即禁用账号。（2）-u ：密码解锁。（3）-d ：使账号无密码。（4）-f ：强迫用户下次登录时修改密码。\n如果不写用户名，则默认修改当前用户的密码。\n普通用户修改自己的密码时，passwd命令会先询问原密码，验证后再要求用户输入两遍新密码，如果两次输入的密码一致，则将这个密码指定给用户；而超级用户为用户指定密码时，就不需要知道原密码\nusermod指令功能：根据实际情况更改已有用户的有关属性，如用户号、主目录、用户组、登录Shell等。语法：usermod [选项] 用户名常用选项：-c, -d, -m, -g, -G, -s, -u以及-o等，这些选项的意义与useradd命令中的选项一样，可以为用户指定新的资源值。（1）-c comment ：指定一段注释性描述。（2）-d 目录 ：指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。若不指定目录，默认会自动在home目录下创建一个和用户名相同的目录。（3）-g 用户组 ：改变用户所在的用户组。（4）-G 用户组，用户组 ：指定用户所属的附加组（5）-s Shell文件 ：指定用户的登录Shell。（6）-u 用户密码：指定用户的密码，如果同时有-o选项，则可以重复使用其他用户的标识号。（7）-e 设置用户的失效时间,通常为XXXX-XX-XX格式.到指定时间后该用户自动失效另外，有些系统可以使用选项：-l 新用户名这个选项指定一个新的账号，即将原来的用户名改为新的用户名。\nid指令 - 查询用户信息功能：查询用户信息语法：id 用户名\nLinux用户组管理用户组类似于角色，系统可以对有共性的多个用户进行统一的管理。每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。\n用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对&#x2F;etc&#x2F;group文件的更新。\ngroupadd 指令功能：增加一个新的用户组语法：groupadd [选项] 用户组\n常用选项：（1）-g GID ：指定新用户组的组标识号（GID）。（2）-o ：一般与-g选项同时使用，表示新用户组的GID可以与系统已有用户组的GID相同。可以在创建新用户时就指定用户组：useradd -g 用户组 用户名但是这种写法的前提是，先创建用户组，用户组已经存在。\ngroupdel指令功能：删除一个已有的用户组语法：groupdel 用户组\ngroupmod - 修改用户组自身的属性功能：修改用户组自身的属性语法：groupmod [选项] 用户组常用选项：\n（1）-g GID ：为用户组指定新的组标识号。（2）-o 与-g选项同时使用，用户组的新GID可以与系统已有用户组的GID相同。（3）-n 新用户组 ：将用户组的名字改为新名字\ngroups指令 - 显示用户所属组groups使用即可\n","slug":"Linux","date":"2023-03-21T06:53:46.000Z","categories_index":"","tags_index":"学习笔记,学习,笔记,Linux","author_index":"雨中冒险"},{"id":"4ac8b1aa8edb55b3f8a5ed8b31c472a5","title":"[Jquery笔记]过滤选择器","content":"\n\n\n\n\n\n\n\n\n\n\n\n基本过滤选择器表格示例\n\n\n选择器\n示例\n示例结果\n说明\n\n\n\n:first\n$(“tr:first”)\n选择所有tr元素中第一个元素\n匹配找到的第一个元素\n\n\n:last\n$(“tr:last”)\n选择所有tr元素中最后一个tr元素\n匹配找到的最后一个元素\n\n\nnot(selector)\n$(“input:not(:checked)”)\n选择没有被选中的input元素\n去除所有与给定个选择器匹配的元素\n\n\n:even\n$(“tr:even”)\n选择索引为偶数的tr元素\n匹配所有索引值为偶数的元素,从0开始计数\n\n\n:odd\n$(“tr:odd”)\n选择索引为奇数的tr元素\n匹配所有索引值为奇数的元素,从0开始计数\n\n\n:eq(index)\n$(“tr:eq(0)”)\n选择索引值为选中的元素\n匹配一个指定索引值的元素\n\n\n:gt(index)\n$(“tr:gt(0)”)\n选择索引值大于0的元素\n匹配所有大于给定索引值的元素\n\n\n:lt(index)\n$(“tr:lt(2)”)\n选择索引值小于2的元素\n匹配所有小于给定索引值的元素\n\n\n:header\n$(“:header”)\n选择网页中所有的H1,H2,H3等\n匹配如H1,H2,H3等标题元素\n\n\n:animated\n$(“div:animated”)\n选择正在执行动画的div元素\n匹配所有正在执行动画效果的元素\n\n\n \n\n代码示例&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n\n    &lt;style&gt;\n        li &#123;\n            width: 50px;\n            height: 20px;\n            margin: 10px;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;script src&#x3D;&quot;.&#x2F;jquery-3.6.3.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;h1&gt;过滤选择器&lt;&#x2F;h1&gt;\n    &lt;h2&gt;基本选择器&lt;&#x2F;h2&gt;\n    &lt;ul&gt;\n        &lt;li&gt;第0项&lt;&#x2F;li&gt;\n        &lt;li&gt;第1项&lt;&#x2F;li&gt;\n        &lt;li&gt;第2项&lt;&#x2F;li&gt;\n        &lt;li class&#x3D;&quot;three&quot;&gt;第3项&lt;&#x2F;li&gt;\n        &lt;li&gt;第4项&lt;&#x2F;li&gt;\n    &lt;&#x2F;ul&gt;\n    &lt;button id&#x3D;&quot;firstBtn&quot;&gt;选择第一个li标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;lastBtn&quot;&gt;现在最后一个li标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;notSelBtn&quot;&gt;选择除class属性为three的所有li标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;evenBtn&quot;&gt;选择索引为偶数的标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;oddBtn&quot;&gt;选择索引为奇数的标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;indexBtn&quot;&gt;选择索引值为3的li标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;gtBtn&quot;&gt;选择索引值大于3的li标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;hBtn&quot;&gt;选择网页中所有h标签&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;refreBtn&quot;&gt;刷新页面&lt;&#x2F;button&gt;\n    &lt;script&gt;\n        $(function() &#123;\n            $(&quot;#firstBtn&quot;).click(function() &#123;\n                $(&quot;li:first&quot;).css(&#123;\n                    color: &#39;red&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#lastBtn&quot;).click(function() &#123;\n                $(&quot;li:last&quot;).css(&#123;\n                    color: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#notSelBtn&quot;).click(function() &#123;\n                $(&quot;li:not(.three)&quot;).css(&#123;\n                    color: &#39;blue&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#evenBtn&quot;).click(function() &#123;\n                $(&quot;li:even&quot;).css(&#123;\n                    color: &#39;aqua&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#oddBtn&quot;).click(function() &#123;\n                $(&quot;li:odd&quot;).css(&#123;\n                    color: &#39;black&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#indexBtn&quot;).click(function() &#123;\n                $(&quot;li:eq(3)&quot;).css(&#123;\n                    color: &#39;gray&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#gtBtn&quot;).click(function() &#123;\n                $(&quot;li:gt(3)&quot;).css(&#123;\n                    color: &#39;yellow&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#hBtn&quot;).click(function() &#123;\n                $(&quot;:header&quot;).css(&#123;\n                    color: &#39;green&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#refreBtn&quot;).click(function() &#123;\n                window.location.reload();\n            &#125;)\n        &#125;)\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n\n&lt;&#x2F;html&gt;\n\n\n\n内容过滤选择器表格示例\n\n\n选择器\n示例\n示例结果\n说明\n\n\n\n:contains(text)\n$(“div:contains(‘world’)”)\n选择含有文本world的div元素\n匹配包含给定文本的元素\n\n\n:empty\n$(“div:empty”)\n选择不包含子元素(或者文本元素)的div空元素\n匹配所有不包含子元素或者文本的空元素\n\n\n:has(selector)\n$(“div:has(‘.mini’)”)\n选取含有class为mini元素的div元素\n匹配含有选择器所匹配的元素的元素\n\n\n:parent\n$(“div:parent”)\n选择含有子元素(或者文本元素)的div元素\n匹配含有子元素或者文本的元素\n\n\n\n\n代码示例&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n    &lt;style&gt;\n        body &#123;\n            font-size: 12px;\n            text-align: center;\n        &#125;\n        div &#123;\n            border: solid 1px black;\n            float: left;\n            margin: 10px;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;div style&#x3D;&quot;width: 100px;height:100px&quot;&gt;hello world&lt;&#x2F;div&gt;\n    &lt;div style&#x3D;&quot;width: 100px;height:100px&quot; class&#x3D;&quot;mini&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;div style&#x3D;&quot;width: 100px;height:100px&quot;&gt;\n        &lt;div style&#x3D;&quot;width: 70px;height:70px&quot; class&#x3D;&quot;mini&quot;&gt;class&#x3D;mini&lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n    &lt;button id&#x3D;&quot;firstBtn&quot;&gt;选择含有文本world的div元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;secondBtn&quot;&gt;选择不包含子元素(或者文本元素)的div空元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;thirdBtn&quot;&gt;选择含有class为mini的元素的div元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;fourthBtn&quot;&gt;选择含有子元素(或者含有文本元素)的div元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;refreBtn&quot;&gt;刷新额面&lt;&#x2F;button&gt;\n    &lt;script src&#x3D;&quot; .&#x2F;jquery-3.6.3.js &quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script&gt;\n        $(function() &#123;\n            $(&quot;#firstBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:contains(&#39;world&#39;)&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#secondBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:empty&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#thirdBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:has(.mini)&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n\n            $(&quot;#fourthBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:parent&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#refreBtn&quot;).click(function() &#123;\n                window.location.reload()\n            &#125;)\n\n        &#125;)\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n\n\n可见性过滤器表格示例\n\n\n选择器\n示例\n示例结果\n说明\n\n\n\n:hidden\n$(‘div:hidden’)\n选择所有不可见的div元素\n匹配所有的不可见元素\n\n\n:visible\n$(‘div:visible’)\n选择所有可见的div元素\n匹配所有可见的元素\n\n\n\n\n\n代码示例&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n    &lt;style&gt;\n        body &#123;\n            font-size: 12px;\n            text-align: center;\n        &#125;\n        \n        div &#123;\n            border: solid 1px black;\n            float: left;\n            margin: 10px;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n\n&lt;body&gt;\n    &lt;div style&#x3D;&quot;width: 100px;height:100px&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;div style&#x3D;&quot;width: 100px;height:100px;display: none;&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;button id&#x3D;&quot;firstBtn&quot;&gt;选取所有不可见元素显示出来&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;secondBtn&quot;&gt;选取所有可见的div元素&lt;&#x2F;button&gt;\n    &lt;script src&#x3D;&quot;.&#x2F;jquery-3.6.3.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script&gt;\n        $(function() &#123;\n            $(&quot;#firstBtn&quot;).click(function() &#123;\n                $(&quot;div:hidden&quot;).show(3000).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#secondBtn&quot;).click(function() &#123;\n                $(&quot;div:visible&quot;).hide(3000).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n        &#125;)\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n\n\n属性过滤选择器表格示例\n\n\n选择器\n示例\n示例结果\n说明\n\n\n\n[attribute]\n$(“div[id]”)\n选择所有含有id属性的div元素\n匹配包含给定属性的元素\n\n\n[attribute&#x3D;value]\n$(“div[title&#x3D;’world’]”)\n选择属性title为world的div元素\n匹配给定的属性高是某个特定值的元素\n\n\n[attribute!&#x3D;value]\n$(“div[title!&#x3D;’world’]”)\n选择属性title部位world的div元素,包含灭有属性title的div元素\n匹配给定的属性不包含某个特定值的元素\n\n\n[attribute^&#x3D;value]\n$(“div[title^&#x3D;’w’]”)\n选择title以w开始的div元素\n匹配给定的属性是以某些之开始的元素\n\n\n[attribute$&#x3D;value]\n$(“div[title$&#x3D;’d’]”)\n选择属性title以d结尾的div元素\n匹配给定的属性是以某些值结尾的元素\n\n\n[attribute*&#x3D;value]\n$(“div[title*&#x3D;’world’]”)\n选择属性title含有world的div元素\n匹配给定的属性是否包含某些值的元素\n\n\n[attributeFilter1][attributeFilter2][attributeFilterN]\n$(“div[id][title*&#x3D;’world’]”)\n选择含有id属性并且title含有world的div元素\n符合属性选择器,需要同时满足多个条件时使用,每选择一次缩小一次范围\n\n\n\n\n代码示例&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n    &lt;style&gt;\n        body &#123;\n            font-size: 12px;\n            text-align: center;\n        &#125;\n        div &#123;\n            border: solid 1px black;\n            float: left;\n            margin: 10px;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;div style&#x3D;&quot;width: 150px;height:150px&quot; title&#x3D;&quot;hello world&quot;&gt;title&#x3D;&quot;hello world&quot;&lt;&#x2F;div&gt;\n    &lt;div style&#x3D;&quot;width: 120px;height:120px&quot; title&#x3D;&quot;test&quot; id&#x3D;&quot;tt&quot;&gt;&lt;&#x2F;div&gt;\n    &lt;div style&#x3D;&quot;width: 120px;height:120px&quot;&gt; 无title属性&lt;&#x2F;div&gt;\n    &lt;button id&#x3D;&quot;firstBtn&quot;&gt;选择所有含有title属性的div&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;secondBtn&quot;&gt;选择属性title为helloworld的div&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;thirdBtn&quot;&gt;选择属性title不为helloworld的div&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;fourthBtn&quot;&gt;选择title以h开头的div元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;fifthBtn&quot;&gt;选择属性title以t结束的div&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;sixthBtn&quot;&gt;选择属性title含有world的div&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;seventhBtn&quot;&gt;选择含有id属性并且title含有&quot;test&quot;的div&lt;&#x2F;button&gt;\n&lt;&#x2F;body&gt;\n\n&lt;script src&#x3D;&quot;.&#x2F;jquery-3.6.3.js&quot;&gt;&lt;&#x2F;script&gt;\n&lt;script&gt;\n    $(function() &#123;\n        $(&quot;#firstBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[title]&quot;).css(&#123;\n                backgroundColor: &#39;pink&#39;\n            &#125;)\n        &#125;)\n        $(&quot;#secondBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[title&#x3D;&#39;hello world&#39;]&quot;).css(&#123;\n                backgroundColor: &#39;pink&#39;\n            &#125;)\n        &#125;)\n        $(&quot;#thirdBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[title!&#x3D;&#39;hello world&#39;]&quot;).css(&#123;\n                backgroundColor: &#39;pink&#39;\n            &#125;)\n        &#125;)\n        $(&quot;#fourthBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[title^&#x3D;&#39;h&#39;]&quot;).css(&#123;\n                backgroundColor: &#39;pink&#39;\n            &#125;)\n\n        &#125;)\n        $(&quot;#fifthBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[title$&#x3D;&#39;t&#39;]&quot;).css(&#123;\n                backgroundColor: &#39;pink&#39;\n            &#125;)\n        &#125;)\n        $(&quot;#sixthBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[title*&#x3D;&#39;world&#39;]&quot;).css(&#123;\n                backgroundColor: &#39;pink&#39;\n            &#125;)\n        &#125;)\n        $(&quot;#seventhBtn&quot;).click(function() &#123;\n            $(&quot;*&quot;).css(&#123;\n                backgroundColor: &#39;white&#39;\n            &#125;)\n            $(&quot;div[id][title*&#x3D;&#39;test&#39;]&quot;).css(&#123;\n                backgroundColor: &quot;pink&quot;\n            &#125;)\n        &#125;)\n    &#125;)\n&lt;&#x2F;script&gt;\n&lt;&#x2F;html&gt;\n\n\n子元素过滤选择器表格示例\n\n\n选择器\n示例\n示例结果\n说明\n\n\n\n:nth-child(index&#x2F;even&#x2F;odd&#x2F;equation)\n$(“div:nth-child(2)”)\n选择所有div元素,且此元素为其父元素的第二个子元素\n匹配每个父元素下的第n个子元素或偶(奇)元素,注意,这里的index从1开始,而不是0\n\n\n:first-child\n$(“div:first-child”)\n选择所有div元素,且此元素为其父元素下的第一个子元素\n匹配每个父元素下的第一个子元素\n\n\n:last-child\n$(“div:last-child”)\n选择所有div元素,且此元素为其父元素下的最后一个子元素\n匹配每个父元素中得到最后一个子元素\n\n\n:only-child\n$(“div:only-child”)\n选择所有div元素,且瓷元素为其父元素下唯一子元素\n如果某个元素是父元素中唯一的子元素,那将会被匹配\n\n\n\n\n\n\n\n\n注意!\n该过滤器表格中第一第二示例中,div本身也将作为父元素的子元素调用例:  body&#123;\n &lt;div class&#x3D;&#39;one&#39;&gt; 内包含各种子元素 &lt;&#x2F;div&gt;\n &lt;div class&#x3D;&#39;two&#39;&gt; 内包含各种子元素 &lt;&#x2F;div&gt;\n &#125;  如果在选择器中使用了$(div:nth-child(2))的元素背景色为黑色  那么作为body的第二个子元素…即class为two的div的盒子背景色也将为黑色  在这同时class为two的div的第二个子元素背景色也将为黑色  具体详细情况请查看代码实例\n\n\n\n\n代码示例&lt;!DOCTYPE html&gt;\n&lt;html lang&#x3D;&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;\n    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;IE&#x3D;edge&quot;&gt;\n    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;\n    &lt;title&gt;Document&lt;&#x2F;title&gt;\n    &lt;style&gt;\n        body &#123;\n            font-size: 12px;\n            text-align: center;\n        &#125;\n        div &#123;\n            border: solid 1px black;\n            float: left;\n            margin: 10px;\n            height: 200px;\n            width: 200px;\n        &#125;\n    &lt;&#x2F;style&gt;\n&lt;&#x2F;head&gt;\n&lt;body&gt;\n    &lt;div class&#x3D;&quot;one&quot;&gt;\n        class&#x3D;one\n        &lt;div class&#x3D;&quot;two&quot; style&#x3D;&quot;height: 70px;width:70px;&quot;&gt;\n            class&#x3D;two&lt;&#x2F;div&gt;\n        &lt;div class&#x3D;&quot;three&quot; style&#x3D;&quot;height: 70px;width: 70px;&quot;&gt;\n            class&#x3D;three&lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n    &lt;div class&#x3D;&quot;one&quot;&gt;\n        class&#x3D;one\n        &lt;div class&#x3D;&quot;two&quot; style&#x3D;&quot;height: 70px; width: 70px;&quot;&gt;\n            class&#x3D;two&lt;&#x2F;div&gt;\n    &lt;&#x2F;div&gt;\n    &lt;button id&#x3D;&quot;firstBtn&quot;&gt;选择所有div元素，且此元素为其父元素下的第二个子元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;secondBtn&quot;&gt;选择所有div元素，且此元素为其父元素下的第一个子元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;thirdBtn&quot;&gt;选择所有class属性不等于one的div，且此元素为其父元素下的最后一个子元素&lt;&#x2F;button&gt;\n    &lt;button id&#x3D;&quot;fourthBtn&quot;&gt;选择所有div元素，且此元素为其父元素下的唯一子元素&lt;&#x2F;button&gt;\n    &lt;script src&#x3D;&quot;.&#x2F;jquery-3.6.3.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script&gt;\n        $(function() &#123;\n            $(&quot;#firstBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:nth-child(2)&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#secondBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:first-child&quot;).css(&#123;\n                    backgroundColor: &quot;pink&quot;\n                &#125;)\n            &#125;)\n            $(&quot;#thirdBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div[class!&#x3D;&#39;one&#39;]:last-child&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n            $(&quot;#fourthBtn&quot;).click(function() &#123;\n                $(&quot;*&quot;).css(&#123;\n                    backgroundColor: &#39;white&#39;\n                &#125;)\n                $(&quot;div:only-child&quot;).css(&#123;\n                    backgroundColor: &#39;pink&#39;\n                &#125;)\n            &#125;)\n        &#125;)\n    &lt;&#x2F;script&gt;\n&lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n\n\n\n表单对象属性过滤选择器表格示例\n\n\n选择器\n示例\n示例结果\n说明\n\n\n\n:enabled\n$(“input:enabled”)\n选择表单内所有可用的input元素\n匹配所有可用元素\n\n\n:disabled\n$(“input:disabled”)\n选择表单内所有不可用的input元素\n匹配所有不可用元素\n\n\n:checked\n$(“input:checked”)\n选择所有选中的input的元素\n匹配所有选中的元素(复选框,单选框等)\n\n\n:selected\n$(“select option:selected”)\n选择select中所有被选中的option元素\n匹配所有被选中的选项元素(主要是下啦列表框)\n\n\n\n\n代码示例\n\n\n\n\n\n\n注意\n待补完\n\n","slug":"Jquery_guolvxuanzeqi","date":"2023-03-14T04:43:19.000Z","categories_index":"","tags_index":"jquery,学习笔记,过滤选择器,选择器,学习,笔记","author_index":"雨中冒险"},{"id":"6a96dc2d408425cc16ea3e6b93d24f8d","title":"[博客搭建系列]Hexo中的一些常用指令","content":"\n\n\n\n\n\n提示\n 文中内容以百度结果与自身实践结合产生..结合了笔者自身的一些理解..如有错误欢迎指正…\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\nhexo g  || hexo generate..该命令执行后在hexo站点根目录下生成public文件夹…\n\n\nhexo d通过public文件夹在本地生成.deploy_git文件夹…并将编译后的文件上传至 GitHub…通常在上文中的hexo g后使用…\n\n\nhexo clean把上文中的生成public文件夹删除…也就是俗称的清除缓存…在特定的条件下会使用…\n\n\nhexo s  || hexo server启动本地hexo服务器…一般默认地址为:\n\n\n\n\n\n\n\n\n\nhttp://localhost:4000/\n在git页面使用ctrl+c可以快捷关闭服务器…常用于本地测试一些页面修改…支持在线查看(即不关闭服务器的情况下修改参数查看修改页面…)但也有部分核心参数需要重新启动服务器才能查看到修改后的效果…\nhexo new + 文件名使用hexo在&#x2F;source&#x2F;_posts文件夹里创建一篇文章会使用new后面的文件名作为标题文章内会自带创建时间同时会在&#x2F;source&#x2F;_posts夹下创建同名的文件夹用于存放图片等用途👈该路径存储图片等方法不常用\n","slug":"hexo","date":"2023-03-07T14:39:48.000Z","categories_index":"","tags_index":"hexo,博客搭建","author_index":"雨中冒险"}]
{"title":"[Linux笔记]软件包操作相关命令","uid":"3dc40b846d0b9e36e38487ef19f2f98c","slug":"LinuxRuanjian","date":"2023-04-23T07:11:46.000Z","updated":"2023-04-23T08:52:45.025Z","comments":true,"path":"api/articles/LinuxRuanjian.json","keywords":null,"cover":"./images/cover3.png","content":"<h1 id=\"软件包与进程管理\"><a href=\"#软件包与进程管理\" class=\"headerlink\" title=\"软件包与进程管理\"></a>软件包与进程管理</h1><h2 id=\"1、RPM\"><a href=\"#1、RPM\" class=\"headerlink\" title=\"1、RPM\"></a>1、RPM</h2><h3 id=\"1-1、RPM简介\"><a href=\"#1-1、RPM简介\" class=\"headerlink\" title=\"1-1、RPM简介\"></a>1-1、RPM简介</h3><ul>\n<li>红帽软件包管理工具是Red Hat公司提出的软件包管理标准。</li>\n<li>RPM会建立统一的数据库文件，详细记录软件信息并能够自动分析软件包之间的依赖关系。</li>\n<li>软件包是一个相对独立的功能单元，但许多软件包通常还需要一定的底层支持，如函数库或网络协议等。通常情况下，一个函数库或网络协议会同时支持多个软件包，当一个软件包需要某个特定的函数库或网络协议时，那么被该函数库或网络协议所支持的软件包就称为这个软件包的依赖。</li>\n</ul>\n<h3 id=\"1-2、RPM命令\"><a href=\"#1-2、RPM命令\" class=\"headerlink\" title=\"1-2、RPM命令\"></a>1-2、RPM命令</h3><h4 id=\"1-2-1、查询已经安装好的包\"><a href=\"#1-2-1、查询已经安装好的包\" class=\"headerlink\" title=\"1-2-1、查询已经安装好的包\"></a>1-2-1、查询已经安装好的包</h4><ul>\n<li>使用rpm命令查询RPM软件包信息时，无须指定版本号，只添加软件名即可。“rpm -qf 文件或目录”命令在解决软件包依赖关系的时候非常有用，因为知道所依赖的模块属于哪个软件包，才能安装该软件包。</li>\n</ul>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">rpm -q[a] [子选项] [软件包名]</code></pre>\n\n<h4 id=\"1-2-2、查询文件或目录属于哪个软件包\"><a href=\"#1-2-2、查询文件或目录属于哪个软件包\" class=\"headerlink\" title=\"1-2-2、查询文件或目录属于哪个软件包\"></a>1-2-2、查询文件或目录属于哪个软件包</h4><pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">rpm -qf 文件或目录名</code></pre>\n\n<h4 id=\"1-2-3、查询系统中没有安装的软件包信息\"><a href=\"#1-2-3、查询系统中没有安装的软件包信息\" class=\"headerlink\" title=\"1-2-3、查询系统中没有安装的软件包信息\"></a>1-2-3、查询系统中没有安装的软件包信息</h4><pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">rpm -qp [子选项] 绝对路径&#x2F;软件包名</code></pre>\n\n<ul>\n<li>上面所有子选项的含义：</li>\n</ul>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">-i：查询指定软件包的详细信息\n-l：查询指定软件包所安装的目录、文件列表\n-c：仅查询指定软件包安装的配置文件\n-d：仅查询指定软件包安装的文档文件\n-R：列出与该软件包有关的依赖软件包所含的文件</code></pre>\n\n<h4 id=\"1-2-4、使用rpm安装命令安装或升级软件包\"><a href=\"#1-2-4、使用rpm安装命令安装或升级软件包\" class=\"headerlink\" title=\"1-2-4、使用rpm安装命令安装或升级软件包\"></a>1-2-4、使用rpm安装命令安装或升级软件包</h4><ul>\n<li>使用rpm命令安装软件包时，须确保软件安装包已经存在，且须在存放安装包的目录下执行安装命令。RPM软件包正式安装前会检查软件包的依赖关系，如果依赖的软件包不存在，则安装无法正常进行。</li>\n</ul>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">rpm [选项] 软件包文件\n选项：\n\t-i：安装一个新的RPM软件包\n\t-v：显示详细的安装过程\n\t-h：使用“#”显示安装进度\n\t-U：升级RPM软件包，若软件包未安装，则进行安装\n\t-F：升级RPM软件包，若软件包未安装，则放弃安装</code></pre>\n\n<ul>\n<li>在使用yum更新软件的情况下，在更新之前需要先备份，以免出现软件包不兼容的情况</li>\n</ul>\n<h4 id=\"1-2-5、使用rpm命令安装没有依赖关系的RPM软件包\"><a href=\"#1-2-5、使用rpm命令安装没有依赖关系的RPM软件包\" class=\"headerlink\" title=\"1-2-5、使用rpm命令安装没有依赖关系的RPM软件包\"></a>1-2-5、使用rpm命令安装没有依赖关系的RPM软件包</h4><pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">rpm -ivh(选项) vsftpd(软件名)-3.0.3(版本号)-33.el8(修订号).x86_64(硬件平台).rpm(扩展名)</code></pre>\n\n<h4 id=\"1-2-6、使用rpm命令安装具有依赖关系的RPM软件包\"><a href=\"#1-2-6、使用rpm命令安装具有依赖关系的RPM软件包\" class=\"headerlink\" title=\"1-2-6、使用rpm命令安装具有依赖关系的RPM软件包\"></a>1-2-6、使用rpm命令安装具有依赖关系的RPM软件包</h4><pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">rpm -ivh(选项) libstdc(软件名)++-8.4.1(版本号)-1.e18(修订号).1686(硬件平台).rpm(扩展名)</code></pre>\n\n<h4 id=\"1-2-7、卸载软件包\"><a href=\"#1-2-7、卸载软件包\" class=\"headerlink\" title=\"1-2-7、卸载软件包\"></a>1-2-7、卸载软件包</h4><ul>\n<li>如果卸载的软件包与其他已经安装的软件包之间存在依赖关系，则系统会报错并终止卸载操作。执行卸载命令后，如果屏幕没有任何提示，则表示卸载成功。</li>\n</ul>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">rpm -e[vh] [软件包名]</code></pre>\n\n<h2 id=\"2、YUM\"><a href=\"#2、YUM\" class=\"headerlink\" title=\"2、YUM\"></a>2、YUM</h2><h3 id=\"2-1、YUM简介\"><a href=\"#2-1、YUM简介\" class=\"headerlink\" title=\"2-1、YUM简介\"></a>2-1、YUM简介</h3><ul>\n<li>YUM是一个功能完善、易于使用的软件维护工具，它可以根据用户的要求分析出所需软件包及其相关的依赖关系，然后自动从服务器(YUM软件仓库)下载软件包并安装到Linux操作系统。使用YUM能够进一步降低软件包的安装难度和复杂度。</li>\n<li>可以将YUM想象成一个庞大的软件仓库，里面保存着几乎所有的常用工具，而且只需知道所需软件名，系统就会自动为用户完成后续工作。</li>\n</ul>\n<h3 id=\"2-2、常用的YUM命令\"><a href=\"#2-2、常用的YUM命令\" class=\"headerlink\" title=\"2-2、常用的YUM命令\"></a>2-2、常用的YUM命令</h3><pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><code class=\"language-cmd\">yum [选项] [操作] [软件包名]\n选项：\n\t-h：显示帮助信息\n\t-y：安装过程中的提示选项均选择“yes”\n\t-q：不显示安装过程\n操作：\n\tlist：列出YUM所管理的所有软件包\n\tinfo：列出软件包详细信息\n\tsearch：查找软件包或匹配特定字符的软件包\n\tinstall：安装软件包\n\tReinstall：重新安装软件包\n\tupdate：更新软件包\n\tcheck-update：检查可更新的软件包\n\tremove：卸载软件包\n\tclean all：清除所有YUM缓存</code></pre>\n\n<h2 id=\"3、源码包安装方式\"><a href=\"#3、源码包安装方式\" class=\"headerlink\" title=\"3、源码包安装方式\"></a>3、源码包安装方式</h2><ul>\n<li>自己看书，或者百度，我不想写了。</li>\n</ul>\n<h2 id=\"进程\"><a href=\"#进程\" class=\"headerlink\" title=\"进程\"></a>进程</h2><h3 id=\"进程和程序\"><a href=\"#进程和程序\" class=\"headerlink\" title=\"进程和程序\"></a>进程和程序</h3><p>进程是指具有一定独立功能的应用程序在一个数据集合上的一次动态执行过程，它是操作系统动态执行的基本单位。Linux 操作系统通过进程完成每个任务，且每个进程都由一个进程号(process identification，PID）来标识。PID总是唯一的，但可以重复使用。当一个进程终止后，其PID 可以再次使用。<br>进程和程序是不同的,主要体现在以下3个方面。</p>\n<ul>\n<li>(1)程序是一个静态的指令集合，可长期保存，而进程是一个程序的动态执行过程，它具有生命周期，是动态产生和消亡的。例如，C语言代码通过编译器编译后，最终会成为一个可执行程序，当这个可执行程序运行起来后（没有结束之前)，它就成为一个进程。</li>\n<li>(2)进程是系统资源分配和调度的基本单位。</li>\n<li>(3)程序和进程不存在一一对应的关系。一个程序在运行中可以产生多个进程，一个进程在生命周期内可以顺序执行若干个程序。</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在 Linux操作系统中安装并配置服务器软件后，通常是由运行在后台的守护进程(daemon）来执行,这个守护进程又称为服务。</p></blockquote>\n<h3 id=\"进程的状态\"><a href=\"#进程的状态\" class=\"headerlink\" title=\"进程的状态\"></a>进程的状态</h3><p>Linux操作系统中的进程是有状态的，且状态之间是可以相互转换的。Linux将进程运行的整个生命周期简单划分为3种基本状态，分别是就绪状态、运行状态和等待状态。</p>\n<ul>\n<li>(1)就绪状态，进程已经满足运行所需的全部条件，正在等待分配CPU.</li>\n<li>(2)运行状态，进程占用CPU 正在运行。</li>\n<li>(3)等待状态，进程因不具备某些执行条件而暂时无法继续运行。</li>\n</ul>\n<p>除了以上3种基本状态外，Linux操作系统还描述了进程的以下状态</p>\n<ul>\n<li>(1)挂起状态:正在运行的进程，因为某种原因失去CPU 而暂停运行。</li>\n<li>(2)终止状态:进程已结束。</li>\n<li>(3)休眠状态:进程主动暂时停止运行。</li>\n<li>(4)不可中断:进程不可被收到的信号中断。</li>\n<li>(5)僵死状态:由于某种原因进程停止运行，但进程的控制结构依然存在。</li>\n</ul>\n<h3 id=\"进程的优先级\"><a href=\"#进程的优先级\" class=\"headerlink\" title=\"进程的优先级\"></a>进程的优先级</h3><p>Linux操作系统中所有进程根据其所处状态，按照时间顺序排列成不同的队列，系统按照相应的策略调度就绪队列中的进程。队列中的进程是有优先级的，取值范围为“-20～19”,优先级的取值越小，其优先级越高，越具有优先启动的权利。启动进程的root用户或普通用户可以修改进程的优先级，root用户既可以调高优先级也可以调低优先级，而普通用户只能调低优先级。配置进程优先级可以改善Linux操作系统的性能。</p>\n<h3 id=\"进程的启动方式\"><a href=\"#进程的启动方式\" class=\"headerlink\" title=\"进程的启动方式\"></a>进程的启动方式</h3><p>进程的启动方式有两种，一种是手工启动，另一种是自动启动。其中，手工启动是指由用户输入命令后按“Enter”键直接启动进程，它又可分为前台启动和后台启动。前台启动是由用户输入命令后按“Enter”键直接执行程序;后台启动是在命令行的末尾加上“&amp;”符号，然后再按“Enter”键。自动启动是系统按照用户要求的时间或方式定时执行特定任务，详细内容将在项目六中介绍。</p>\n<h2 id=\"进程管理命令\"><a href=\"#进程管理命令\" class=\"headerlink\" title=\"进程管理命令\"></a>进程管理命令</h2><p>常用的进程管理命令包括查看进程信息(ps、top和 pstree）、调整进程优先级(nice)、终止进程运行（kill和killall)、将当前进程调入后台并停止运行（“Ctrl+Z组合键)查看处于后台的进程（jobs）和将处于后台的进程恢复到前台运行（fg）等。</p>\n<h3 id=\"1-查看进程信息——-ps命令、top命令和-pstree命令\"><a href=\"#1-查看进程信息——-ps命令、top命令和-pstree命令\" class=\"headerlink\" title=\"1.查看进程信息—— ps命令、top命令和 pstree命令\"></a>1.查看进程信息—— ps命令、top命令和 pstree命令</h3><h4 id=\"ps\"><a href=\"#ps\" class=\"headerlink\" title=\"ps\"></a>ps</h4><ul>\n<li>（1）静态查看进程信息使用ps命令，其格式如下。<br><strong>ps [选项]</strong></li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ps aux</code></pre>\n<p>上述命令执行结果中各字段的含义</p>\n<table>\n<tr>\n<th>序号</th>\n<th>字段</th>\n<th>含义</th>\n</tr>\n<tr><td>1</td><td>user</td><td>进程所有者</td></tr>\n<tr><td>2</td><td>pid</td><td>进程id号</td></tr>\n<tr><td>3</td><td>%cpu</td><td>进程的cpu占用百分比</td></tr>\n<tr><td>4</td><td>%mem</td><td>进程内存占用百分比</td></tr>\n<tr><td>5</td><td>VSZ</td><td>进程虚拟内存量(单位KB)</td></tr>\n<tr><td>6</td><td>RSS</td><td>进程固定内存量(单位KB)</td></tr>\n<tr><td>7</td><td>TTY</td><td>进程所在终端</td></tr>\n<tr><td>8</td><td>STAT</td><td>进程目前状态(R:运行状态;S:休眠状态;T:终止状态;D:不可中断状态;Z:僵死状态)</td></tr>\n<tr><td>9</td><td>START</td><td>启动进程时间</td></tr>\n<tr><td>10</td><td>Time</td><td>进程实际占用cpu时间</td></tr>\n<tr><td>11</td><td>COMMAND</td><td>进程对应的命令名</td></tr>\n</table>\n\n\n<h4 id=\"top\"><a href=\"#top\" class=\"headerlink\" title=\"top\"></a>top</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">top</code></pre>\n<p>top命令执行结果的前5行（标注框内容）为系统整体的统计信息，各行所代表的含义如下。</p>\n<ol>\n<li>第1行包括系统时间、运行时间、登录终端数、系统平均负载（后面的3个值分别为1分钟、5分钟和15分钟内的平均值，数值越小意味着负载越低)。</li>\n<li>第2行包括进程总数、运行中的进程数、休眠中的进程数、停止的进程数和僵死的进程数。</li>\n<li>第3行显示的是CPU使用情况，包括用户占用百分比、系统内核占用百分比、修改过优先级的进程占用百分比等。</li>\n<li>第4行显示的是物理内存的使用情况，包括物理内存总量、内存空闲量、内存使用量和缓冲区占用的内存量。</li>\n<li>第5行显示的是交换分区的使用情况，包括交换分区总量、交换分区空闲量、交换分区使用量和用于高速缓存的大小。<br>top命令执行结果第6行各字段的含义依次为，进程D号、进程的所有者、进程的优先级、进程的优先级数值、进程占用的虚拟内存值、进程占用的物理内存值、进程占用的共享内存值、进程的状态、进程的CPU占用百分比、进程的内存占用百分比、进程实际占用CPU 的时间和进程对应的命令名。</li>\n</ol>\n<p>使用top命令后，其操作方式有以下6个。1按“P”键根据 CPU 占用情况进行排序。</p>\n<ol>\n<li>按“P”键根据 CPU 占用情况进行排序</li>\n<li>按“M”键根据内存占用情况进行排序。</li>\n<li>按“N”键根据进程的PID大小进行排序。</li>\n<li>按“h”键获得top命令的在线帮助信息。</li>\n<li>按“q”键正常退出 top命令。</li>\n<li>按“空格”键强制更新进程状态信息。</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在服务器访问高峰期，如果使用一些对服务器访问压力较大的命令，如复制大量的数据或压缩&#x2F;解压缩大文件等,有可能会造成服务器响应缓慢甚至死机。每台服务器具体提供的服务不同，其访问高峰期也会有所不同。故在实际生产环境中，高负载命令一般建议在凌晨执行。</p></blockquote>\n<h4 id=\"pstree\"><a href=\"#pstree\" class=\"headerlink\" title=\"pstree\"></a>pstree</h4><p>以树型结构显示各进程间的关系使用pstree命令，其格式如</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">pstree[选项]</code></pre>\n<p>常用选项的含义如表</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-a</td>\n<td>显示进程对应的命令名</td>\n</tr>\n<tr>\n<td>-u</td>\n<td>显示进程对应的用户名</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>显示进程的pid</td>\n</tr>\n</tbody></table>\n<h3 id=\"调成进程优先级\"><a href=\"#调成进程优先级\" class=\"headerlink\" title=\"调成进程优先级\"></a>调成进程优先级</h3><p>调整进程优先级使用nice命令,其格式如下:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">nice -n 优先级数值 进程名\n\n例: nice -n 10 nasj</code></pre>\n<p>执行<strong>ps -l</strong>命令可查看进程信息</p>\n<h3 id=\"终止进程运行-kill命令和kill-all命令\"><a href=\"#终止进程运行-kill命令和kill-all命令\" class=\"headerlink\" title=\"终止进程运行 kill命令和kill all命令\"></a>终止进程运行 kill命令和kill all命令</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">kill [选项] [PID]</code></pre>\n<p>选项内常用命令为<strong>-9</strong>和<strong>-15(默认)</strong>.其中选项-9表示强制终止进程,选项-15表示正常终止进程</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">killall [选项] [进程名]\n\n例: killall phh-fpm</code></pre>\n<p>killall命令常用选项和含义和kill命令基本相同</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在实际生产环境中，不建议使用“kill-9”命令,尤其是在Web、执行定时任务或包含长事务等应用中，因为执行该命令会立即强制终止进程，很可能会造成数据丢失、无法启动等问题。所以，读者应认真研究各个命令的含义，在执行前估量其可能带来的后果,并养成严谨认真的工作态度。</p></blockquote>\n","feature":true,"text":"软件包与进程管理1、RPM1-1、RPM简介 红帽软件包管理工具是Red Hat公司提出的软件包管理标准。 RPM会建立统一的数据库文件，详细记录软件信息并能够自动分析软件包之间的依赖关系。 软件包是一个相对独立的功能单元，但许多软件包通常还需要一定的底层支持，如函数库或网络协议...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"学习笔记","slug":"学习笔记","count":8,"path":"api/tags/学习笔记.json"},{"name":"学习","slug":"学习","count":8,"path":"api/tags/学习.json"},{"name":"笔记","slug":"笔记","count":8,"path":"api/tags/笔记.json"},{"name":"Linux","slug":"Linux","count":5,"path":"api/tags/Linux.json"},{"name":"软件包","slug":"软件包","count":1,"path":"api/tags/软件包.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E5%8C%85%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">软件包与进程管理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81RPM\"><span class=\"toc-text\">1、RPM</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1%E3%80%81RPM%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">1-1、RPM简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2%E3%80%81RPM%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1-2、RPM命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-1%E3%80%81%E6%9F%A5%E8%AF%A2%E5%B7%B2%E7%BB%8F%E5%AE%89%E8%A3%85%E5%A5%BD%E7%9A%84%E5%8C%85\"><span class=\"toc-text\">1-2-1、查询已经安装好的包</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-2%E3%80%81%E6%9F%A5%E8%AF%A2%E6%96%87%E4%BB%B6%E6%88%96%E7%9B%AE%E5%BD%95%E5%B1%9E%E4%BA%8E%E5%93%AA%E4%B8%AA%E8%BD%AF%E4%BB%B6%E5%8C%85\"><span class=\"toc-text\">1-2-2、查询文件或目录属于哪个软件包</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-3%E3%80%81%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F%E4%B8%AD%E6%B2%A1%E6%9C%89%E5%AE%89%E8%A3%85%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">1-2-3、查询系统中没有安装的软件包信息</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-4%E3%80%81%E4%BD%BF%E7%94%A8rpm%E5%AE%89%E8%A3%85%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85%E6%88%96%E5%8D%87%E7%BA%A7%E8%BD%AF%E4%BB%B6%E5%8C%85\"><span class=\"toc-text\">1-2-4、使用rpm安装命令安装或升级软件包</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-5%E3%80%81%E4%BD%BF%E7%94%A8rpm%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85%E6%B2%A1%E6%9C%89%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB%E7%9A%84RPM%E8%BD%AF%E4%BB%B6%E5%8C%85\"><span class=\"toc-text\">1-2-5、使用rpm命令安装没有依赖关系的RPM软件包</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-6%E3%80%81%E4%BD%BF%E7%94%A8rpm%E5%91%BD%E4%BB%A4%E5%AE%89%E8%A3%85%E5%85%B7%E6%9C%89%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB%E7%9A%84RPM%E8%BD%AF%E4%BB%B6%E5%8C%85\"><span class=\"toc-text\">1-2-6、使用rpm命令安装具有依赖关系的RPM软件包</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-2-7%E3%80%81%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6%E5%8C%85\"><span class=\"toc-text\">1-2-7、卸载软件包</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81YUM\"><span class=\"toc-text\">2、YUM</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1%E3%80%81YUM%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">2-1、YUM简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2%E3%80%81%E5%B8%B8%E7%94%A8%E7%9A%84YUM%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">2-2、常用的YUM命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E6%BA%90%E7%A0%81%E5%8C%85%E5%AE%89%E8%A3%85%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">3、源码包安装方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">进程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">进程和程序</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">进程的状态</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7\"><span class=\"toc-text\">进程的优先级</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">进程的启动方式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">进程管理命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E4%BF%A1%E6%81%AF%E2%80%94%E2%80%94-ps%E5%91%BD%E4%BB%A4%E3%80%81top%E5%91%BD%E4%BB%A4%E5%92%8C-pstree%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">1.查看进程信息—— ps命令、top命令和 pstree命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ps\"><span class=\"toc-text\">ps</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#top\"><span class=\"toc-text\">top</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pstree\"><span class=\"toc-text\">pstree</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B0%83%E6%88%90%E8%BF%9B%E7%A8%8B%E4%BC%98%E5%85%88%E7%BA%A7\"><span class=\"toc-text\">调成进程优先级</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%88%E6%AD%A2%E8%BF%9B%E7%A8%8B%E8%BF%90%E8%A1%8C-kill%E5%91%BD%E4%BB%A4%E5%92%8Ckill-all%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">终止进程运行 kill命令和kill all命令</span></a></li></ol></li></ol></li></ol>","author":{"name":"雨中冒险","slug":"blog-author","avatar":"/images/QQ.jpg","link":"/","description":"I'm in love with a shootin' star </br> But she moves so fast when she falls then I'll be waitin'","socials":{"github":"https://github.com/Kictoriz","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"[JS笔记]JS中的基础","uid":"b34163682a4d59686c5ded94e1395695","slug":"JavaScriptChangyongHanshu","date":"2023-04-15T08:15:38.000Z","updated":"2023-04-17T02:53:11.507Z","comments":true,"path":"api/articles/JavaScriptChangyongHanshu.json","keywords":null,"cover":"./images/cover9.jpg","text":"‘## 基础javaScript 由ECMA dom bom 组成 内嵌式: &lt;script&gt; &lt;&#x2F;script&gt; 行内式js: &lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;点击...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"学习笔记","slug":"学习笔记","count":8,"path":"api/tags/学习笔记.json"},{"name":"学习","slug":"学习","count":8,"path":"api/tags/学习.json"},{"name":"笔记","slug":"笔记","count":8,"path":"api/tags/笔记.json"},{"name":"JavaScript","slug":"JavaScript","count":1,"path":"api/tags/JavaScript.json"},{"name":"函数","slug":"函数","count":1,"path":"api/tags/函数.json"},{"name":"js","slug":"js","count":1,"path":"api/tags/js.json"},{"name":"JS","slug":"JS","count":1,"path":"api/tags/JS.json"}],"author":{"name":"雨中冒险","slug":"blog-author","avatar":"/images/QQ.jpg","link":"/","description":"I'm in love with a shootin' star </br> But she moves so fast when she falls then I'll be waitin'","socials":{"github":"https://github.com/Kictoriz","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}
{"title":"[Vue笔记]Vue基础","uid":"04067c54252c28898a0ede65f4d0c63f","slug":"VueJichu","date":"2023-04-15T06:19:44.000Z","updated":"2023-04-15T08:15:24.798Z","comments":true,"path":"api/articles/VueJichu.json","keywords":null,"cover":"./images/cover8.png","content":"<h3 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h3><h4 id=\"基础中的基础\"><a href=\"#基础中的基础\" class=\"headerlink\" title=\"基础中的基础\"></a>基础中的基础</h4><ul>\n<li><p>v-html:指令会将实例中的数据当成HTML标签解析后输出，它等同于JavaScript的innerHtml属性。</p>\n<hr>\n</li>\n<li><p>v-text:主要用来更新textContent，将实例中的数据当成纯文本输出，可以等同于JavaScript的text属性。</p>\n<hr>\n</li>\n<li><p>v-once:只渲染元素和组件一次，随后的渲染，使用了此指令的元素&#x2F;组件及其所有的子节点，都会当作静态内容并跳过，这可以用于优化更新性能。v-once指令也不需要表达式。</p>\n<hr>\n</li>\n<li><p>v-if:用来判断+控制显示（渲染与否，如果false则删除该节点,true为渲染该节点）</p>\n</li>\n<li><p>v-show:控制显示（隐藏与否，元素节点一直存在，只是没有显示,在需要经常渲染或消失的情况用v-show更好,否则使用v-if更好）</p>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>简单来说就是:v-if 指令用于条件性地渲染一块内容。这块内容只会在指令的表达式返回 true 值的时候被渲染。v-show不管条件是否成立，都会渲染html,只是表达式为false时会用display&#x3D;none来隐藏掉该元素</p></blockquote>\n<hr>\n\n<ul>\n<li>v-for:指令通常基于一个数组或者对象 来渲染一个列表。v-for 指令需要使用 (item,index) in items 形式的特殊语法，其中 items 是源数据数组，而 item 则是被迭代的数组元素的别名,我们可以访问所有父作用域的属性。v-for 还支持一个可选的第二个参数，即当前项的索引。也可以用 of 替代 in 作为分隔符，因为它更接近 JavaScript 迭代器的语法..</li>\n</ul>\n<hr>\n\n<h4 id=\"v-on\"><a href=\"#v-on\" class=\"headerlink\" title=\"v-on\"></a>v-on</h4><ul>\n<li>v-on:指令是来绑定事件监听器的，类似原生JavaScript的onclick的用法。这样我们就可以做一些交互了。v-on:click可以简写成@click,同时v-on可以绑定很多javascript事件。</li>\n</ul>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>Vue支持以下修饰符</p>\n<p>阻止单击事件冒泡</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;a v-on:click.stop&#x3D;&quot;doThis&quot;&gt;&lt;&#x2F;a&gt;</code></pre>\n<p>提交事件不再重载页面 </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;form v-on:submit.prevent&#x3D;&quot;onSubmit&quot;&gt;&lt;&#x2F;form&gt;</code></pre>\n<p>修饰符可以串联 </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;a v-on:click.stop.prevent&#x3D;&quot;doThat&quot;&gt;&lt;&#x2F;a&gt;</code></pre>\n<p>只有修饰符 </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;form v-on:submit.prevent&gt;&lt;&#x2F;form&gt;</code></pre>\n\n\n</div>\n<h4 id=\"v-model\"><a href=\"#v-model\" class=\"headerlink\" title=\"v-model\"></a>v-model</h4><p>预期：随表单控件类型不同而不同。<br>限制：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;input&gt;\n&lt;select&gt;\n&lt;textarea&gt;\ncomponents</code></pre>\n\n<p>修饰符：<br>.lazy - 取代 input 监听 change 事件<br>.number - 输入字符串转为有效的数字<br>.trim - 输入首尾空格过滤</p>\n<p>v-model 会忽略所有表单元素的 value、checked、selected 特性的初始值而总是将 Vue 实例的数据作为数据来源。你应该通过 JavaScript 在组件的 data 选项中声明初始值。</p>\n<p>v-model 在内部为不同的输入元素使用不同的属性并抛出不同的事件：<br>text 和 textarea 元素使用 value 属性和 input 事件；<br>checkbox 和 radio 使用 checked 属性和 change 事件；<br>select 字段将 value 作为 prop 并将 change 作为事件。</p>\n<p>v-model 在内部为不同的输入元素使用不同的属性并抛出不同的事件：<br>text 和 textarea 元素使用 value 属性和 input 事件；<br>checkbox 和 radio 使用 checked 属性和 change 事件；<br>select 字段将 value 作为 prop 并将 change 作为事件。<br>对于需要使用输入法 (如中文、日文、韩文等) 的语言，你会发现 v-model 不会在输入法组合文字过程中得到更新。如果你也想处理这个过程，请使用 input 事件。</p>\n<h4 id=\"计算属性-computed-及过滤器-filters-和监听-watch\"><a href=\"#计算属性-computed-及过滤器-filters-和监听-watch\" class=\"headerlink\" title=\"计算属性(computed)及过滤器(filters)和监听(watch)\"></a>计算属性(computed)及过滤器(filters)和监听(watch)</h4><p><Strong>computed 计算属性</Strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">computed:&#123;\n   计算属性名()&#123;\n         执行代码块\n    return \n\n&#125;\n&#125;   (计算属性，不能和data的变量名相同)</code></pre>\n\n\n<p><strong>watch 监听</strong><br>语法规则: </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">watch:&#123;\n\t\tzong() &#123;\n\t\t\tthis.msg&#x3D;this.zon&gt;60?&#39;考试合格&#39;:&#39;考试不合格&#39;\n\t\t&#125;\n                       &#x2F;&#x2F;所有监听的定义在这里</code></pre>\n\n<p><strong>filters 过滤器</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"> filters &#123;\n    过滤器名称(参数-对谁过滤就是谁 )&#123;\n       代码块\nreturn 值\nabc(value) &#123;\n\t\t\t\t\n\t\t\t\tthis.value&#x3D;&#39;$&#39;+value.toFixed(2)\n\t\t\t\t\n\t    \t\treturn this.value;\n\t    \t&#125;\n\t    &#125;\n&#125;\n&#125;\n使用过滤器:   &#123;&#123;num | 过滤器名称&#125;&#125;</code></pre>\n\n\n\n\n<h4 id=\"数组方法\"><a href=\"#数组方法\" class=\"headerlink\" title=\"数组方法\"></a>数组方法</h4><p>Vue 包含一组观察数组的变异方法，所以它们也将会触发视图更新。这些方法如下：</p>\n<ul>\n<li>push() 添加元素</li>\n<li>pop() 删除最后一个元素</li>\n<li>shift() 删除第一个元素</li>\n<li>unshift() 添加一个元素到数组最前面</li>\n<li>splice() 方法用于插入、删除或替换数组的元素</li>\n<li>sort() 排序（升序）</li>\n<li>reverse() 排序（降序）</li>\n<li>slice(begin, end)<ul>\n<li><strong>begin</strong> 可选  从该索引开始提取原数组元素，如果该参数为负数，则表示从原数组中的倒数第几个元素开始提取。此参数缺省为0，如果 begin 超出原数组的索引范围，则会返回空数组。</li>\n<li><strong>end</strong> 可选 在该索引处结束提取原数组元素，slice 会提取原数组中索引从 begin 到 end 的所有元素（包含 begin，但不包含 end）。如：slice(0,2) 会提取原数组中从第1个元素开始到第3元素之间的（不包含第3个元素）所有元素 （即索引为 0，1的元素）。<br>如果该参数为负数， 则它表示在原数组中的倒数第几个元素结束抽取。 slice(-2,-1) 表示抽取了原数组中的倒数第二个元素到最后一个元素（不包含最后一个元素，也就是只有倒数第二个元素）.<br>如果 end 被省略或者大于数组的长度，则 slice 会一直提取到原数组末尾。</li>\n<li><strong>返回值</strong> 一个含有被提取元素的新数组。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Vue实例属性\"><a href=\"#Vue实例属性\" class=\"headerlink\" title=\"Vue实例属性\"></a>Vue实例属性</h3><ul>\n<li><p>vm.$props:可以接受上级组件向下传输的数据,可以打印接受所有父组件和外部组件传来的数据(键值对)</p>\n</li>\n<li><p>vm.$options Vue实力画室,除了指定的选项,还可以传入自定义选项,其中自定义选项没有响应式例(el,data)</p>\n</li>\n<li><p>vm.$el 属性可以访问当前实例或组件使用的根dom元素</p>\n</li>\n<li><p>vm.$children 可以用来获取当前实例的子组件,不保证顺序,同时也不是响应式</p>\n</li>\n<li><p>vm.$root 用来获取当前组件根实例</p>\n</li>\n<li><p>vm.$slots:可以访问插口相关属性</p>\n</li>\n<li><p>vm.$attrs:获取组件的属性,但获取的属性不包含class,style,props属性</p>\n</li>\n<li><p>vm.$refs: 通过给标签行内添加 ref&#x3D;”id” ,在实例中可以通过this.$refs.id 获取到该元素</p>\n</li>\n</ul>\n<h3 id=\"Vue组件\"><a href=\"#Vue组件\" class=\"headerlink\" title=\"Vue组件\"></a>Vue组件</h3><h4 id=\"组件内容分发\"><a href=\"#组件内容分发\" class=\"headerlink\" title=\"组件内容分发\"></a>组件内容分发</h4><p>单个插槽 在调用组件时中间写上内容分发<br>        在子组件中使用<slot></slot>标签接受内容<br>        如果父组件没有插入内容  在<slot>  作为默认内容分发 </slot><br>具名插槽  给slot 标签加name  例:<slot name=\"title\"></slot><br>         给分发内容标签里添加 slot&#x3D;”title”  例:</p><p solt=\"title\"><br>作用域插槽  让子组件的数据在父级的插槽可以被访问<br>           将子组件的数据作为slot属性并对其进行绑定<br>           在父级作用域中,可以V-solt设置一个包含所有插槽prop的对象名称<br>           在父级,具有特殊属性scope的template元素被称作作用域插槽模板<br>           scope的值对应一个临时变量,这个变量用于接收从子组件传递到props对象<br>作用域插槽例: </p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;div id&#x3D;&quot;app&quot;&gt;\n        &lt;parent&gt;\n        &lt;template slot-scope&#x3D;&quot;myS&quot;&gt;\n            &lt;div&gt;\n                &lt;p&gt;第一个:&#123;&#123;myS.text&#125;&#125;&lt;&#x2F;p&gt;\n                &lt;p&gt;第二个:&#123;&#123;myS.text2&#125;&#125;&lt;&#x2F;p&gt;\n            &lt;&#x2F;div&gt;\n        &lt;&#x2F;template&gt;\n    &lt;&#x2F;parent&gt;\n    &lt;&#x2F;div&gt;\n    &lt;template id&#x3D;&quot;tem&quot;&gt;\n        &lt;div&gt;\n            &lt;slot text&#x3D;&quot;hello&quot; :text2&#x3D;&quot;msg&quot;&gt;&lt;&#x2F;slot&gt;\n        &lt;&#x2F;div&gt;\n    &lt;&#x2F;template&gt;\n    &lt;script&gt;\n        Vue.component(&#39;parent&#39;,&#123;\n            template:&#39;#tem&#39;,\n            data()&#123;\n                return&#123;\n                    msg:&#39;这是组件属性&#39;\n                &#125;\n            &#125;</code></pre>\n\n\n\n<p>mixins:是一种分发vue组件中可服用的方式,<br>合并时:如果数据冲突,则遵循就近原则<br>      如果是狗子函数冲突,先执行混入里的函数,再执行组件的函数</p>\n<p>render():渲染函数,使用Vue.render实现对虚拟dom的操作,可以更好发挥编程能力<br>例:</p>\n<p>render(createElement){<br>    return createElement(要chauffeu创造的标签名,数据对象,子级节点)<br>}</p>\n<h3 id=\"Vue-use\"><a href=\"#Vue-use\" class=\"headerlink\" title=\"Vue.use\"></a>Vue.use</h3><p>Vue.use():先定义插件,再安装<br>定义: 定义对象或函数,如果是对象,需要用install()安装,如果是函数方法,不需要install()<br>安装: Vue.use(插件名)<br>例:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\nlet plugin&#x3D;&#123;&#125;\nplugin.install&#x3D;function(Vue.options)&#123;\n    vue.directive(&#39;colors&#39;,&#123;\n        bind(el,binding)&#123;\n            el.style.color&#x3D;&quot;red&quot;\n        &#125;\n    &#125;)\n&#125;\nVue.use(plugin)\n\n如果是函数: \n\nfunction abc&#123;\n    Vue.directive(&#39;同上~~&#39;&#125;)\nVue.use(abc)\n</code></pre>\n\n\n<h3 id=\"Vue-extend及Vue-mixin和Vue-extend\"><a href=\"#Vue-extend及Vue-mixin和Vue-extend\" class=\"headerlink\" title=\"Vue.extend及Vue.mixin和Vue.extend\"></a>Vue.extend及Vue.mixin和Vue.extend</h3><p>Vue.extend:基于Vue创造子类</p>\n<p>Vue.set 响应式<br>可以向响应式对象添加一个也具有响应式的属性<br>使用:Vue.set(响应式对项目,要添加的响应式属性,要添加响应式属性的值)<br>例:Vue.set (vm.obj,’age’,20)</p>\n<p>Vue.mixin<br>用于全局注册的一个混入,它影响之后创建的每一个Vue实力,该接口主要是提供给插件作者使用</p>\n","text":"基础基础中的基础 v-html:指令会将实例中的数据当成HTML标签解析后输出，它等同于JavaScript的innerHtml属性。 v-text:主要用来更新textContent，将实例中的数据当成纯文本输出，可以等同于JavaScript的text属性。 v-once:只...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"学习笔记","slug":"学习笔记","count":10,"path":"api/tags/学习笔记.json"},{"name":"学习","slug":"学习","count":10,"path":"api/tags/学习.json"},{"name":"笔记","slug":"笔记","count":10,"path":"api/tags/笔记.json"},{"name":"Vue","slug":"Vue","count":1,"path":"api/tags/Vue.json"},{"name":"基础","slug":"基础","count":1,"path":"api/tags/基础.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E4%B8%AD%E7%9A%84%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">基础中的基础</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#v-on\"><span class=\"toc-text\">v-on</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#v-model\"><span class=\"toc-text\">v-model</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7-computed-%E5%8F%8A%E8%BF%87%E6%BB%A4%E5%99%A8-filters-%E5%92%8C%E7%9B%91%E5%90%AC-watch\"><span class=\"toc-text\">计算属性(computed)及过滤器(filters)和监听(watch)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">数组方法</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vue%E5%AE%9E%E4%BE%8B%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">Vue实例属性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vue%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">Vue组件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%84%E4%BB%B6%E5%86%85%E5%AE%B9%E5%88%86%E5%8F%91\"><span class=\"toc-text\">组件内容分发</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vue-use\"><span class=\"toc-text\">Vue.use</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vue-extend%E5%8F%8AVue-mixin%E5%92%8CVue-extend\"><span class=\"toc-text\">Vue.extend及Vue.mixin和Vue.extend</span></a></li></ol>","author":{"name":"雨中冒险","slug":"blog-author","avatar":"/images/QQ.jpg","link":"/","description":"I'm in love with a shootin' star </br> But she moves so fast when she falls then I'll be waitin'","socials":{"github":"https://github.com/Kictoriz","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"[JS笔记]JS中的基础","uid":"b34163682a4d59686c5ded94e1395695","slug":"JavaScriptChangyongHanshu","date":"2023-04-15T08:15:38.000Z","updated":"2023-04-25T07:09:46.856Z","comments":true,"path":"api/articles/JavaScriptChangyongHanshu.json","keywords":null,"cover":"./images/cover9.jpg","text":"基础javaScript 由ECMA dom bom 组成 内嵌式: &lt;script&gt; &lt;&#x2F;script&gt; 行内式js: &lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;点击我&qu...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"学习笔记","slug":"学习笔记","count":10,"path":"api/tags/学习笔记.json"},{"name":"学习","slug":"学习","count":10,"path":"api/tags/学习.json"},{"name":"笔记","slug":"笔记","count":10,"path":"api/tags/笔记.json"},{"name":"JavaScript","slug":"JavaScript","count":1,"path":"api/tags/JavaScript.json"},{"name":"函数","slug":"函数","count":1,"path":"api/tags/函数.json"},{"name":"js","slug":"js","count":1,"path":"api/tags/js.json"},{"name":"JS","slug":"JS","count":1,"path":"api/tags/JS.json"}],"author":{"name":"雨中冒险","slug":"blog-author","avatar":"/images/QQ.jpg","link":"/","description":"I'm in love with a shootin' star </br> But she moves so fast when she falls then I'll be waitin'","socials":{"github":"https://github.com/Kictoriz","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"[Linux笔记]磁盘管理","uid":"f1528f06a9d4931b446ce220ed34e353","slug":"LinuxCipanguanli","date":"2023-04-11T07:50:59.000Z","updated":"2023-04-18T08:49:59.757Z","comments":true,"path":"api/articles/LinuxCipanguanli.json","keywords":null,"cover":"./images/cover7.png","text":"1、磁盘分区概述 磁盘是计算机主要的存储介质，可以存储大量的数据。 磁盘主要有以下4部分组成： 1、磁头（head）：磁头是硬盘中最昂贵的部件，也是硬盘技术中最重要和最关键的一环 2、磁道（track）：当磁盘旋转时，磁头若保持在一个位置，则会在磁盘表面划出一个圆形轨迹称为磁道。...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"学习笔记","slug":"学习笔记","count":10,"path":"api/tags/学习笔记.json"},{"name":"学习","slug":"学习","count":10,"path":"api/tags/学习.json"},{"name":"笔记","slug":"笔记","count":10,"path":"api/tags/笔记.json"},{"name":"Linux","slug":"Linux","count":7,"path":"api/tags/Linux.json"}],"author":{"name":"雨中冒险","slug":"blog-author","avatar":"/images/QQ.jpg","link":"/","description":"I'm in love with a shootin' star </br> But she moves so fast when she falls then I'll be waitin'","socials":{"github":"https://github.com/Kictoriz","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}
{"title":"[JS笔记]JS中的基础","uid":"b34163682a4d59686c5ded94e1395695","slug":"JavaScriptChangyongHanshu","date":"2023-04-15T08:15:38.000Z","updated":"2023-04-17T02:53:11.507Z","comments":true,"path":"api/articles/JavaScriptChangyongHanshu.json","keywords":null,"cover":"./images/cover9.jpg","content":"<p>‘## 基础<br>javaScript 由ECMA dom bom 组成</p>\n<p>内嵌式:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;script&gt;\n\n&lt;&#x2F;script&gt;\n</code></pre>\n\n<p>行内式js:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;点击我&quot; onclick&#x3D;&quot;alert(&#39;hello world!&#39;)&quot;&gt;</code></pre>\n\n\n<p>外部js文件内:    1 不需要写script标签<br>                         2 html文件中引入js下面不能写js代码<br>                         3 严格区分大小写<br>                         4 js代码对空格、换行、缩进不敏感、一条语句可以分多行书写<br>                         5 js没写分号也不会报错</p>\n<p>引用代码(不准确)：\t</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;script src&#x3D;&quot;newjs.js&quot;&gt;&lt;&#x2F;script&gt; &#x2F;&#x2F;引入js\n\n   alert(msg)  弹出警示框\n   console.log(msg) 浏览器控制台打印出信息 (使用函数时不需要连接符+)\n   prompt(msg) 让用户输入信息,它的返回值就是用户输入的信息,默认获取得到是字符串类型 无法加减</code></pre>\n\n<p>1 变量<br>白话文解释:变量就是一个装东西的盒子<br>通俗:变量就是存放数据的容器，我们通过变量名获取数据，甚至数据可以修改。<br>不需要提前声明变量类型<br>赋值的同时被确定<br>声明变量<br>Name 有特殊含义 最好不要作为变量名<br>var age; &#x2F;&#x2F;声明是一个age变量</p>\n<p>var 是js的关键字 variable的简写意思<br>变量连接符 +<br>例如  console.log(“我今年”+age”岁了”)</p>\n<p>同时声明多个变量   var myname&#x3D;18 , age&#x3D;10 , email&#x3D;<a href=\"mailto:&#53;&#49;&#53;&#x39;&#x38;&#48;&#50;&#54;&#57;&#64;&#x71;&#x71;&#46;&#99;&#111;&#x6d;\">&#53;&#49;&#53;&#x39;&#x38;&#48;&#50;&#54;&#57;&#64;&#x71;&#x71;&#46;&#99;&#111;&#x6d;</a>;</p>\n<p>不声明只赋值会变成全局变量</p>\n<p>数据类型简介：</p>\n<ul>\n<li><p>简单类型和复杂类型</p>\n<ul>\n<li>简单类型:<ul>\n<li>简单类型又叫做基本数据类型或者值类型</li>\n<li>值类型： 简单数据类型&#x2F;基本数据类型，在存储变量中存储的是值本身，因此叫做值类型</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>String、number、Boolean、undefined、null</p>\n<ul>\n<li>复杂类型:<ul>\n<li>复杂类型又叫做引用类型</li>\n<li>引用类型： 复杂数据类型，在存储变量中存储的仅仅是地址（引用），因此叫做引用数据类型，通过new关键字创建的对象（系统对象、自定义对象），如Object、Array、Data等</li>\n</ul>\n</li>\n</ul>\n<p>字符串+number&#x3D;字符串<br>number+number&#x3D;数字相加</p>\n<p>typeof 变量名（检测数据类型）</p>\n<p>转换数字型型<br>parseInt()<br>parseFloat()</p>\n<p>流程控制: 顺序结构 分支结构   循环结构</p>\n<p>数据可以通过修改Length改变长度 例:<br>                               arr.length&#x3D;7<br>                              额外增加的值为undefind</p>\n<h2 id=\"常用的一些方法\"><a href=\"#常用的一些方法\" class=\"headerlink\" title=\"常用的一些方法\"></a>常用的一些方法</h2><p>typeof(变量名):查看变量类型<br>parseInt(变量名):将变量转换为整数<br>parseFloat(变量名):将变量转换为浮点型</p>\n<h2 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h2><p>对象是一组无需的相关属性和方法集合<br>对象由属性和方法组成<br>属性:事物的特征 在对象中用属性表示    调用 例:arr.属性名 另一种 对象[‘属性名’]<br>方法:事物的行为 在对象中用方法来表示    调用 例:arr.方法名()</p>\n<p>创建: new object 和构造函数及字面量</p>\n<p>对象字面量:{          }<br>                ↑ 使用键值对,可以在值放方法</p>\n<p>创建对象 var andy&#x3D;new Object()<br>            andy.age&#x3D;18<br>            andy.name&#x3D;’可可’<br>            andy.sex&#x3D;’男’</p>\n<p>构造函数:初始化对象,赋初值,首字母大写</p>\n<p>创建   function Person(name,age,sex){<br>       this.name&#x3D;name<br>       this.age&#x3D;age<br>       this.sex&#x3D;sex<br>       this.sayhi&#x3D;function(){<br>        ~~~~~~~<br>       }<br>}</p>\n<p>var bigbai&#x3D;new Person(‘小白’,’18’,’男’)</p>\n<p>对象分自定义对象,内置对象,浏览器对象<br>对象是类的实例化</p>\n<p>new:<br>   1.内存中创建新的空对象<br>   2.让this来指这个空对象<br>   3.执行构造函数里的代码</p>\n<p>   4.返回这个新对象(构造函数不需要return)</p>\n<p>遍历对象属性:</p>\n<p>for(变量 in 对象名){</p>\n<p>}</p>\n<p>Math对象:    </p>\n<ul>\n<li>Math.round 从0到1的含无限位小数的随机数 </li>\n<li>Math.PI 圆周率</li>\n<li>Math.abs 绝对值</li>\n<li>Math.ceil 向上取正</li>\n<li>Math.floor 向下取正</li>\n</ul>\n<p>面向对象的特征:封装性:将数据与功能组合到一起<br>              继承性:实现代码复用的一个手段<br>              多态性:对不同的对象,一种操作,不同的执行结果.</p>\n<p>面向对象和面向过程的区别:面向对象是相对于面向过程的<br>                       面向过程对象包含了面向过程<br>                       是面向过程的封装<br>对象是类的实例</p>\n<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><p>arr.push 末尾添加 返回的是新数组的长度,并且 修改<br>arr.pop 删除末尾的数 返回的是删除的值<br>arr.unshift 在数组开头添加任意元素 返回的是数组长度<br>arr.shift 删除左边第一个元素,返回的是删除的值</p>\n<p>arr.isArray(arr) 判断是否为数组<br>arr instanceof Object   判断arr 是否是 Object后面的类,或者属于其子类</p>\n<p>伪数组 arguments: 1.有length属性<br>                 2.按索引的方式储存数据<br>                 3.不具有push,pop等方法<br>                 4.可遍历  </p>\n<p>匿名函数 (function(){<br>           alert()<br>}  &#x2F;&#x2F;若需要立即执行则大括号后面跟一个()即可</p>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><p>函数就是封装了一段可被重复封装执行的代码块</p>\n<p>函数在使用时分两步:声明函数和调用函数</p>\n<p>声明:function 函数名(){<br>函数体   }<br> 调用的时候是 函数名()     <Strong>不要忘记加括号</Strong></p>\n<p> return语句之后的代码不被执行<br> return只能返回一个值,如果跟了多个值 返回最后一个值</p>\n<h2 id=\"Math-random-取特定区间的随机数值\"><a href=\"#Math-random-取特定区间的随机数值\" class=\"headerlink\" title=\"Math.random()取特定区间的随机数值:\"></a>Math.random()取特定区间的随机数值:</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\"> function getRandom(min,max)&#123;\n       return Math.floor(Math.random()*(max-min+1)+min);\n&#125;\n\nMath.floor() 代表向下取整\nMath.cell() 代表向上取整\nMath.random() 代表获取0到1中间的随机数 \n\n先算Max-min 得到他们的区间差,假设Max为18,min为11\n式子为 Math.floor(Math.random()*(18-11+1)+11);\n通过计算现在为(Math.random()*(7+1)+11)\n他们的区间为7,也就是现在是获取0到6.9999999\n但Math.floor会向下取整 所以要+1\n最后随机数从0到7都有可能\n再加上最小数11\n则成功获取到min到max区间的值\n\n</code></pre>\n\n<h2 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date()\"></a>Date()</h2><p>Date:<br>他是个构造函数 ,需先实例化<br>利用参数创造:new Date(2012-12-21)<br>getFullyear()–获取年份<br>getMonth()–获取月,取值为0-11, 正常月分来算需要值+1<br>getDate()–获取日<br>getDay()–获取星期几,0为星期天,1为星期一<br>getHours()–获取时<br>getMinutes()–获取分<br>getSeconds()–获取秒<br>get Milliseconds()– 获取毫秒    1000毫秒&#x3D;1000毫秒<br>Date.now()–获取现在的时间<br>var now &#x3D;+new Date()–1970到现在的毫秒获取</p>\n<h2 id=\"待补完’\"><a href=\"#待补完’\" class=\"headerlink\" title=\"待补完’\"></a>待补完’</h2>","feature":true,"text":"‘## 基础javaScript 由ECMA dom bom 组成 内嵌式: &lt;script&gt; &lt;&#x2F;script&gt; 行内式js: &lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;点击...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"学习笔记","slug":"学习笔记","count":8,"path":"api/tags/学习笔记.json"},{"name":"学习","slug":"学习","count":8,"path":"api/tags/学习.json"},{"name":"笔记","slug":"笔记","count":8,"path":"api/tags/笔记.json"},{"name":"JavaScript","slug":"JavaScript","count":1,"path":"api/tags/JavaScript.json"},{"name":"函数","slug":"函数","count":1,"path":"api/tags/函数.json"},{"name":"js","slug":"js","count":1,"path":"api/tags/js.json"},{"name":"JS","slug":"JS","count":1,"path":"api/tags/JS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">常用的一些方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Math-random-%E5%8F%96%E7%89%B9%E5%AE%9A%E5%8C%BA%E9%97%B4%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0%E5%80%BC\"><span class=\"toc-text\">Math.random()取特定区间的随机数值:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Date\"><span class=\"toc-text\">Date()</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BE%85%E8%A1%A5%E5%AE%8C%E2%80%99\"><span class=\"toc-text\">待补完’</span></a></li></ol>","author":{"name":"雨中冒险","slug":"blog-author","avatar":"/images/QQ.jpg","link":"/","description":"I'm in love with a shootin' star </br> But she moves so fast when she falls then I'll be waitin'","socials":{"github":"https://github.com/Kictoriz","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"[Linux笔记]终端的超级管理员操作命令等","uid":"79aba1709dbb470fdcd9b5b7bdd25c83","slug":"LinuxRuanjian","date":"2023-04-23T07:11:46.000Z","updated":"2023-04-23T07:29:40.597Z","comments":true,"path":"api/articles/LinuxRuanjian.json","keywords":null,"cover":"./images/cover3.png","text":"四、软件包与进程管理1、RPM1-1、RPM简介 红帽软件包管理工具是Red Hat公司提出的软件包管理标准。 RPM会建立统一的数据库文件，详细记录软件信息并能够自动分析软件包之间的依赖关系。 软件包是一个相对独立的功能单元，但许多软件包通常还需要一定的底层支持，如函数库或网络...","link":"","photos":[],"count_time":{"symbolsCount":849,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"学习笔记","slug":"学习笔记","count":8,"path":"api/tags/学习笔记.json"},{"name":"学习","slug":"学习","count":8,"path":"api/tags/学习.json"},{"name":"笔记","slug":"笔记","count":8,"path":"api/tags/笔记.json"},{"name":"Linux","slug":"Linux","count":5,"path":"api/tags/Linux.json"}],"author":{"name":"雨中冒险","slug":"blog-author","avatar":"/images/QQ.jpg","link":"/","description":"I'm in love with a shootin' star </br> But she moves so fast when she falls then I'll be waitin'","socials":{"github":"https://github.com/Kictoriz","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"[Vue笔记]Vue基础","uid":"04067c54252c28898a0ede65f4d0c63f","slug":"VueJichu","date":"2023-04-15T06:19:44.000Z","updated":"2023-04-15T08:15:24.798Z","comments":true,"path":"api/articles/VueJichu.json","keywords":null,"cover":"./images/cover8.png","text":"基础基础中的基础 v-html:指令会将实例中的数据当成HTML标签解析后输出，它等同于JavaScript的innerHtml属性。 v-text:主要用来更新textContent，将实例中的数据当成纯文本输出，可以等同于JavaScript的text属性。 v-once:只...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"学习笔记","slug":"学习笔记","count":8,"path":"api/tags/学习笔记.json"},{"name":"学习","slug":"学习","count":8,"path":"api/tags/学习.json"},{"name":"笔记","slug":"笔记","count":8,"path":"api/tags/笔记.json"},{"name":"Vue","slug":"Vue","count":1,"path":"api/tags/Vue.json"},{"name":"基础","slug":"基础","count":1,"path":"api/tags/基础.json"}],"author":{"name":"雨中冒险","slug":"blog-author","avatar":"/images/QQ.jpg","link":"/","description":"I'm in love with a shootin' star </br> But she moves so fast when she falls then I'll be waitin'","socials":{"github":"https://github.com/Kictoriz","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}